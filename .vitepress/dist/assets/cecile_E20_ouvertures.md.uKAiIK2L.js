import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.CEgrwLex.js";const g=JSON.parse('{"title":"Et demain on fait quoi ?","description":"","frontmatter":{},"headers":[],"relativePath":"cecile/E20_ouvertures.md","filePath":"cecile/E20_ouvertures.md"}'),t={name:"cecile/E20_ouvertures.md"},n=e(`<h1 id="et-demain-on-fait-quoi" tabindex="-1">Et demain on fait quoi ? <a class="header-anchor" href="#et-demain-on-fait-quoi" aria-label="Permalink to &quot;Et demain on fait quoi ?&quot;">​</a></h1><p><em>L&#39;apothéose !</em></p><p>😯 Après-demain alors, parlons du futur</p><hr><h2 id="passe-present-avenir" tabindex="-1">Passé, présent, avenir <a class="header-anchor" href="#passe-present-avenir" aria-label="Permalink to &quot;Passé, présent, avenir&quot;">​</a></h2><ul><li>Avec le socle on a posé des bases, de bonnes bases même !</li><li>Avec la spé on a repoussé ce savoir-faire encore plus loin</li><li>En apothéose on concrétise tout ça en travaillant au sein d&#39;une équipe <br><em>Au fait une journée dédiée à ce sujet arrive</em></li><li>Puis viennent le TP et surtout la recherche d&#39;emploi <br><em>Au fait une journée dediée à ce sujet arrive aussi</em></li></ul><ul><li>En poste, arriveront les évolutions et toujours plus de découvertes !</li></ul><p><em>Parlons technos ! 🎉</em></p><h2 id="junior4life" tabindex="-1">Junior4Life <a class="header-anchor" href="#junior4life" aria-label="Permalink to &quot;Junior4Life&quot;">​</a></h2><ul><li>Le métier de dev, c&#39;est aussi savoir apprendre</li><li>Sur un projet il est quasi systématique d&#39;aborder au moins une petite nouveauté</li><li>Relax, on reste méthodique 🧘‍♂️</li><li>Et de projet en projet on apprend beaucoup !</li></ul><p><em>&quot;Et ça c&#39;est beau&quot;</em> JCVD</p><h2 id="quoi-par-exemple" tabindex="-1">Quoi par exemple ? <a class="header-anchor" href="#quoi-par-exemple" aria-label="Permalink to &quot;Quoi par exemple ?&quot;">​</a></h2><p>Une liste non-exhaustive de choses liées de près ou de loin à l&#39;univers React</p><ul><li>SSR</li><li>PWA</li><li>TypeScript</li><li>Electron</li><li>React Native</li><li>¯\\_(ツ)_/¯</li></ul><hr><h2 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-label="Permalink to &quot;SSR&quot;">​</a></h2><p><strong>Problème</strong> : Notre HTML est construit à l&#39;exécution de nos scripts React côté client<br> Pour la requête HTTP initiale le HTML retourné est vide<br> Cela peut être problématique notamment pour le SEO</p><p><strong>Solution</strong> : Faire du SSR <em>Server Side Rendering</em> : le rendu initial se fait côté serveur</p><h3 id="un-outil-pour-le-faire" tabindex="-1">Un outil pour le faire <a class="header-anchor" href="#un-outil-pour-le-faire" aria-label="Permalink to &quot;Un outil pour le faire&quot;">​</a></h3><p><strong><a href="https://nextjs.org/" target="_blank" rel="noreferrer">Next.js</a></strong></p><ul><li>Au lieu d&#39;un point d&#39;entrée unique -&gt; 1 par route</li><li>Puis on modularise et on s&#39;organise comme on sait le faire</li><li>En plus il permet de faire de la SSG : <em>static site generation</em></li></ul><p>Les plus :</p><ul><li>⬆️ et rapide à <a href="https://nextjs.org/docs" target="_blank" rel="noreferrer">prendre en main</a></li></ul><p>Les moins :</p><ul><li>Qui dit framework, dit pas forcément mes outils préférés <em>(ex : routeur)</em></li></ul><hr><h2 id="pwa" tabindex="-1">PWA <a class="header-anchor" href="#pwa" aria-label="Permalink to &quot;PWA&quot;">​</a></h2><p>Progressive Web App<br><em>Notre application web se déguise en application native</em></p><p>Des avantages :</p><ul><li>Limite les coûts (1 seul code pour tous les systèmes d&#39;exploitation)</li><li>+ de fonctionnalités (mode hors ligne, gestion des pertes de connexion, raccourci, ...)</li><li>+ de performances (gestion d&#39;un cache et <a href="https://developer.mozilla.org/fr/docs/Web/API/Service_Worker_API/Using_Service_Workers" target="_blank" rel="noreferrer">service workers</a>)</li><li>Configuration simple via le <a href="https://developer.mozilla.org/en-US/docs/Web/Manifest" target="_blank" rel="noreferrer">fichier manifest</a></li></ul><hr><h2 id="typescript" tabindex="-1"><a href="https://www.typescriptlang.org/docs/home.html" target="_blank" rel="noreferrer">TypeScript</a> <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;[TypeScript](https://www.typescriptlang.org/docs/home.html)&quot;">​</a></h2><ul><li><strong>Concept</strong> : On écrit du javascript typé qui sera transpilé en javascript</li><li><strong>Avantages</strong> : <ul><li>il est <em>optionnel</em>,</li><li>il rend le code <em>scalable</em> et <em>maintenable</em>,</li><li>il enrichit la syntaxe JS <a href="https://www.typescriptlang.org/docs/handbook/classes.html" target="_blank" rel="noreferrer">notamment pour la POO</a>,</li><li>combiné à l&#39;auto-complétion il nous fait gagner beaucoup de temps 💥,</li><li>...</li></ul></li></ul><h3 id="exemple" tabindex="-1">Exemple <a class="header-anchor" href="#exemple" aria-label="Permalink to &quot;Exemple&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    firstname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    lastname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> say</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">what</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">who</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // l&#39;autocomplétion des propriétés de who va être top</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">what</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">who</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">firstname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">who</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lastname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstUser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    firstName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;JC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lastName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;VD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">say</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Coucou&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, firstUser);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Je vais tout de suite savoir que la suite pose problème</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">say</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Ah&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Oh&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], { login: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tata&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><hr><h2 id="electron" tabindex="-1"><a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron</a> <a class="header-anchor" href="#electron" aria-label="Permalink to &quot;[Electron](https://www.electronjs.org/)&quot;">​</a></h2><ul><li><strong>Concept</strong> : pouvoir embarquer nos applications HTML/CSS/JS (et donc React) dans un logiciel pour Windows, Mac ou Linux 💥</li><li><a href="https://www.electronjs.org/docs/tutorial/first-app" target="_blank" rel="noreferrer">Prise en main</a> rapide</li><li>Il repose sur Node et Chromium</li><li>-&gt; Process de dev habituel, on ajoute nos modules npm, on s&#39;organise \\o/</li><li><em>Exemples / possiblités</em> : Slack, Discord, VSC, ...</li></ul><hr><h2 id="react-native" tabindex="-1"><a href="https://reactnative.dev/" target="_blank" rel="noreferrer">React Native</a> <a class="header-anchor" href="#react-native" aria-label="Permalink to &quot;[React Native](https://reactnative.dev/)&quot;">​</a></h2><ul><li>Des concepts bien connus : <ul><li>Composants</li><li>Props</li><li>State</li><li>JSX</li><li>...</li></ul></li><li>Un support différent ~web~ -&gt; Application mobile native</li><li>Des composants de base différents ~<code>&lt;div /&gt; &lt;img /&gt; &lt;input /&gt;</code>~ -&gt; <code>&lt;View /&gt; &lt;Image /&gt; &lt;TextInput /&gt;</code></li><li>Pas de css, du css in js <em>???</em></li></ul><hr><h2 id="css-in-js" tabindex="-1">CSS in JS <a class="header-anchor" href="#css-in-js" aria-label="Permalink to &quot;CSS in JS&quot;">​</a></h2><p><strong>Concept :</strong></p><ul><li>On décrit nos styles à l&#39;aide de JS</li><li>On exploite la syntaxe JS (variables, fonctions ...)</li><li>On injecte ensuite les styles</li></ul><p><strong>Avantages :</strong></p><ul><li>Permet la dynamisation de nos styles !</li><li>Permet la modularisation de nos styles !</li></ul><p><strong>Quelques outils au choix :</strong></p><ul><li><a href="https://emotion.sh/docs/introduction" target="_blank" rel="noreferrer">Emotion</a>, <a href="https://github.com/threepointone/glamor" target="_blank" rel="noreferrer">Glamor</a>, <a href="https://styled-components.com/" target="_blank" rel="noreferrer">Styled-components</a>, ...</li></ul><h3 id="styled-components-exemple" tabindex="-1"><a href="https://styled-components.com/" target="_blank" rel="noreferrer">Styled-components</a> - exemple <a class="header-anchor" href="#styled-components-exemple" aria-label="Permalink to &quot;[Styled-components](https://styled-components.com/) - exemple&quot;">​</a></h3><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;styled-components&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// on prépare un composant enrichi de styles</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// gabarits étiquetés : https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Litt%C3%A9raux_gabarits#Gabarits_%C3%A9tiquet%C3%A9s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ButtonStyled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styled.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">button</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    padding: 1rem;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    color: white;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    background-color: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">props</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> props</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">favoriteColor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">};</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// on l&#39;utilise dans un composant React</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">favoriteColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ButtonStyled</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> favoriteColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{favoriteColor}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Valider</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ButtonStyled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Donnera dans le navigateur</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* une classe aléatoire unique sera générée automatiquement */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        .gGHTh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            /* si cette info change, le style sera recalculé ! */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f0f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gGHTh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Valider&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><h2 id="bilan" tabindex="-1">Bilan <a class="header-anchor" href="#bilan" aria-label="Permalink to &quot;Bilan&quot;">​</a></h2><ul><li>Des tas de portes ouvertes avec l&#39;univers React, JS et du dev en général</li></ul><ul><li>Un grand savoir-faire déjà accumulé</li></ul>`,57),l=[n];function r(h,p,k,o,d,E){return a(),i("div",null,l)}const u=s(t,[["render",r]]);export{g as __pageData,u as default};

import{_ as e,c as o,o as l,a2 as a}from"./chunks/framework.TebtTzPX.js";const h=JSON.parse('{"title":"MISE EN PROD SYMFO WEB ENCORE","description":"","frontmatter":{},"headers":[],"relativePath":"symfony/Mise_en_prod_symfony_web_encore.md","filePath":"symfony/Mise_en_prod_symfony_web_encore.md"}'),t={name:"symfony/Mise_en_prod_symfony_web_encore.md"},r=a('<h1 id="mise-en-prod-symfo-web-encore" tabindex="-1">MISE EN PROD SYMFO WEB ENCORE <a class="header-anchor" href="#mise-en-prod-symfo-web-encore" aria-label="Permalink to &quot;MISE EN PROD SYMFO WEB ENCORE&quot;">​</a></h1><h2 id="ca-va-etre-comme-pour-un-projet-symfo" tabindex="-1">Ca va être comme pour un projet symfo. <a class="header-anchor" href="#ca-va-etre-comme-pour-un-projet-symfo" aria-label="Permalink to &quot;Ca va être comme pour un projet symfo.&quot;">​</a></h2><ol><li><p>On clone le repo, on configure le .env</p></li><li><p>A/ Import /export de la BDD</p></li></ol><ul><li>Ne pas oublier d&#39;exporter la bdd localement :</li></ul><p><code>mysqldump -u username -p database_name &gt; database_dump.sql</code></p><ul><li>Puis l&#39;&#39;importer sur le serveur :</li></ul><p><code>mysql -u username -p database_name &lt; database_dump.sql</code></p><p>ou</p><ol start="2"><li>B/ Si la BDD est créée via les migrations On crée la BDD et on exécute les migrations</li></ol><ul><li><code>php bin/console do:da:cr</code></li><li><code>php bin/console do:mi:mi</code></li></ul><ol start="3"><li>On installe les dépendances PHP <code>composer install </code></li></ol><h2 id="cote-js" tabindex="-1">Côté JS : <a class="header-anchor" href="#cote-js" aria-label="Permalink to &quot;Côté JS :&quot;">​</a></h2><ol><li>Installer node</li></ol><p><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</code></p><ul><li>Si ça trouve pas la commande nvm, rajouter ça dans le .bashrc :</li></ul><p><code>export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;&amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot; [ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;</code></p><ul><li>et relancer le shell :</li></ul><p><code>source ~/.bashrc</code></p><ul><li>vérifier que nvm est installé :</li></ul><p><code>nvm -v</code></p><ul><li>Installer la version qu&#39;on veut de node , par exemple : <code>nvm install latest</code><code>nvm install 20</code></li></ul><p>2/ Installer les librairies js en faisant <code>npm install </code> dans le répertoire du projet symfony</p><p>3/ Compiler les assets : <code>npm run build</code></p><h2 id="mise-a-jour-du-projet" tabindex="-1">Mise à jour du projet <a class="header-anchor" href="#mise-a-jour-du-projet" aria-label="Permalink to &quot;Mise à jour du projet&quot;">​</a></h2><ul><li>On fait git pull</li><li>On relance <code>composer install </code> et <code>npm install </code> et <code>npm run build</code></li></ul>',25),s=[r];function n(i,c,d,p,u,m){return l(),o("div",null,s)}const f=e(t,[["render",n]]);export{h as __pageData,f as default};

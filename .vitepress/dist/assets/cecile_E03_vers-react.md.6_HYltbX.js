import{_ as s,c as a,o as i,a2 as e}from"./chunks/framework.BXMoTSpH.js";const g=JSON.parse('{"title":"Récap","description":"","frontmatter":{},"headers":[],"relativePath":"cecile/E03_vers-react.md","filePath":"cecile/E03_vers-react.md"}'),n={name:"cecile/E03_vers-react.md"},l=e(`<h1 id="recap" tabindex="-1">Récap <a class="header-anchor" href="#recap" aria-label="Permalink to &quot;Récap&quot;">​</a></h1><p>Faisons un petit point.</p><hr><h2 id="programmation-fonctionnelle" tabindex="-1">Programmation fonctionnelle <a class="header-anchor" href="#programmation-fonctionnelle" aria-label="Permalink to &quot;Programmation fonctionnelle&quot;">​</a></h2><h3 id="foreach" tabindex="-1"><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/forEach" target="_blank" rel="noreferrer"><code>.forEach()</code></a> <a class="header-anchor" href="#foreach" aria-label="Permalink to &quot;[\`.forEach()\`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/forEach)&quot;">​</a></h3><p>Exécute une fonction pour chaque élément du tableau.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> numbers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Affiche chaque nombre</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">numbers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Le nombre est : &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="map" tabindex="-1"><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/map" target="_blank" rel="noreferrer"><code>.map()</code></a> <a class="header-anchor" href="#map" aria-label="Permalink to &quot;[\`.map()\`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/map)&quot;">​</a></h3><p>Renvoie un nouveau tableau modifié / transposé.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> numbers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [1, 4, 9, 16, 25, 36]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> squares</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="filter" tabindex="-1"><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/filter" target="_blank" rel="noreferrer"><code>.filter()</code></a> <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;[\`.filter()\`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/filter)&quot;">​</a></h3><p>Renvoie un nouveau tableau avec les éléments correspondants.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> numbers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [2, 4, 6]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> evenNumbers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="find" tabindex="-1"><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/find" target="_blank" rel="noreferrer"><code>.find()</code></a> <a class="header-anchor" href="#find" aria-label="Permalink to &quot;[\`.find()\`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/find)&quot;">​</a></h3><p>Renvoie le premier élément qui respecte la condition.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> numbers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> numberSupTwo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="je-savais-deja-faire" tabindex="-1">Je savais déjà faire... <a class="header-anchor" href="#je-savais-deja-faire" aria-label="Permalink to &quot;Je savais déjà faire...&quot;">​</a></h3><p>Tout ça, on pouvait le faire avec un <code>for</code></p><ul><li>For, c&#39;est plus rapide ! </li><li>For, c&#39;est plus compatible ! </li></ul><p>Mais... </p><ul><li>C&#39;est moins lisible </li><li>C&#39;est moins modulaire </li></ul><h2 id="autre-rappel-callback" tabindex="-1">Autre rappel : callback <a class="header-anchor" href="#autre-rappel-callback" aria-label="Permalink to &quot;Autre rappel : callback&quot;">​</a></h2><p>Une approche généraliste</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleFormSubmit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">form.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;submit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handleFormSubmit);</span></span></code></pre></div><hr><h2 id="programmation-declarative" tabindex="-1">Programmation déclarative <a class="header-anchor" href="#programmation-declarative" aria-label="Permalink to &quot;Programmation déclarative&quot;">​</a></h2><h3 id="paradigme-declaratif" tabindex="-1">Paradigme déclaratif <a class="header-anchor" href="#paradigme-declaratif" aria-label="Permalink to &quot;Paradigme déclaratif&quot;">​</a></h3><p>On veut limiter/cacher le code <em>plomberie</em>.</p><p>On automatise tout ce qui peut l&#39;être (merci les fonctions &amp; callbacks).</p><p>On se concentre sur le résultat, on laisse la machine travailler / optimiser.</p><h3 id="applications-reactives-declaratives" tabindex="-1">Applications réactives &amp; déclaratives <a class="header-anchor" href="#applications-reactives-declaratives" aria-label="Permalink to &quot;Applications réactives &amp; déclaratives&quot;">​</a></h3><ul><li>On s&#39;appuie sur des données (état / state) </li><li>Une logique de rendu initial propre… </li><li>On écoute les événements / interactions… </li><li>Dès qu&#39;une donnée change, on redessine toute l&#39;application ! </li></ul><h3 id="quid-des-performances" tabindex="-1">Quid des performances ? <a class="header-anchor" href="#quid-des-performances" aria-label="Permalink to &quot;Quid des performances ?&quot;">​</a></h3><ul><li>C&#39;est pas important… </li><li>Bon, si, un peu… Mais on va déléguer… </li><li>React et son virtual DOM ! </li></ul><hr><h2 id="javascript-ecmascript" tabindex="-1">JavaScript - ECMAScript <a class="header-anchor" href="#javascript-ecmascript" aria-label="Permalink to &quot;JavaScript - ECMAScript&quot;">​</a></h2><h3 id="es2015-ou-es6" tabindex="-1">ES2015+ ou ES6+ <a class="header-anchor" href="#es2015-ou-es6" aria-label="Permalink to &quot;ES2015+ ou ES6+&quot;">​</a></h3><p>ECMAScript à partir de 2015 / de la version 6</p><blockquote><p>On a vu quelques nouveautés de syntaxe</p></blockquote><p><em>Attention à la compatibilité de certaines syntaxes</em></p><p>A moins de transpiler le code avec babel </p><p>Ce qu&#39;on va faire aujourd&#39;hui 😃 </p><h3 id="exemples" tabindex="-1">Exemples <a class="header-anchor" href="#exemples" aria-label="Permalink to &quot;Exemples&quot;">​</a></h3><ul><li><code>let</code> : portée se limitant au bloc</li><li class="fragment"><code>const</code> : référence constante limitée au bloc</li><li class="fragment"><code>() =&gt; {}</code> : fonctions flechées</li><li class="fragment"><code>\`Hello \${name}\`</code> : littéraux de gabarits</li><li class="fragment"><code>(...args) =&gt; {}</code> : paramètre du reste</li><li class="fragment"><code>{ data }</code> = <code>{ data: data }</code> : propriété raccourcie</li></ul><h3 id="destructuring-1-3" tabindex="-1">Destructuring 1/3 <a class="header-anchor" href="#destructuring-1-3" aria-label="Permalink to &quot;Destructuring 1/3&quot;">​</a></h3><p>L&#39;affectation par décomposition d&#39;un tableau.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> students</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hannah&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Coraline&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Fred&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Stockage de chaque valeur du tableau students</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> first</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> students[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hannah&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> second</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> students[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Coraline&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> last</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> students[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Fred&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Équivalent avec le destructuring</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> students;</span></span></code></pre></div><h3 id="destructuring-2-3" tabindex="-1">Destructuring 2/3 <a class="header-anchor" href="#destructuring-2-3" aria-label="Permalink to &quot;Destructuring 2/3&quot;">​</a></h3><p>L&#39;affectation par décomposition d&#39;un objet.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  firstname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Parker&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lastname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Lewis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Stockage de chaque valeur de l&#39;objet data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.firstname; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Parker&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lastname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.lastname; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Lewis&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Équivalent avec le destructuring</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">firstname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data;</span></span></code></pre></div><h3 id="destructuring-3-3" tabindex="-1">Destructuring 3/3 <a class="header-anchor" href="#destructuring-3-3" aria-label="Permalink to &quot;Destructuring 3/3&quot;">​</a></h3><p>L&#39;affectation par décomposition d&#39;un objet dans les paramètres d&#39;une fonction.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// La fonction display va recevoir un seul paramètre : un objet</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// on peut le décomposer directement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">firstname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lastname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Bienvenue \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">firstname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lastname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} !\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Objet de données</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  firstname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Parker&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lastname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Lewis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Exécution en passant data en argument</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span></code></pre></div><hr><h2 id="les-outils" tabindex="-1">Les outils <a class="header-anchor" href="#les-outils" aria-label="Permalink to &quot;Les outils&quot;">​</a></h2><h2 id="gestionnaire-de-paquets" tabindex="-1">Gestionnaire de paquets <a class="header-anchor" href="#gestionnaire-de-paquets" aria-label="Permalink to &quot;Gestionnaire de paquets&quot;">​</a></h2><p>Outil permettant de gérer (installation, mise à jour, changement de version, etc) les dépendances de nos projets.</p><p>Un incontournable dans l&#39;écosystème JS !</p><p>Exemples :</p><ul><li><a href="https://www.npmjs.com" target="_blank" rel="noreferrer">npm</a></li><li><a href="https://yarnpkg.com" target="_blank" rel="noreferrer">yarn</a></li></ul><h3 id="node-package-manager-1-3" tabindex="-1">Node Package Manager 1/3 <a class="header-anchor" href="#node-package-manager-1-3" aria-label="Permalink to &quot;Node Package Manager 1/3&quot;">​</a></h3><p>Pour Node ? Oui, mais pas que !</p><p><code>npm</code> s&#39;appuie sur la plateforme <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">https://www.npmjs.com/</a></p><ul><li>Multiples modules / packages pour le JavaScript en général.</li><li>Pour le back et le front, par exemple <code>express</code> (back) et <code>react</code> (front)</li><li>Même des outils annexes comme : <code>bulma</code>, <code>bootstrap</code>, etc...</li></ul><h3 id="node-package-manager-2-3" tabindex="-1">Node Package Manager 2/3 <a class="header-anchor" href="#node-package-manager-2-3" aria-label="Permalink to &quot;Node Package Manager 2/3&quot;">​</a></h3><p>Commandes principales</p><ul><li class="fragment"><code>npm init</code> : crée un fichier <code>package.json</code></li><li class="fragment"><code>npm install</code> : installe les packages présents dans <code>package.json</code></li><li class="fragment"><code>npm install react</code> : installe le package nommé &quot;react&quot;</li><li class="fragment"><code>npm uninstall react</code> : désinstalle le package nommé &quot;react&quot;</li><li class="fragment"><code>npm install webpack --save-dev</code> : installe &quot;webpack&quot; et le rajoute aux dépendances de dev dans package.json</li></ul><h3 id="node-package-manager-3-3" tabindex="-1">Node Package Manager 3/3 <a class="header-anchor" href="#node-package-manager-3-3" aria-label="Permalink to &quot;Node Package Manager 3/3&quot;">​</a></h3><p><code>yarn</code> : une version améliorée de <code>npm</code></p><p>Plus rapide, plus secure, plus joli.</p><ul><li class="fragment"><code>yarn init</code> = <code>npm init</code></li><li class="fragment"><code>yarn</code> = <code>npm install</code></li><li class="fragment"><code>yarn add react</code> = <code>npm install react</code></li><li class="fragment"><code>yarn remove react</code> = <code>npm uninstall react</code></li><li class="fragment"><code>yarn add webpack --dev</code> = <code>npm install webpack --save-dev</code></li></ul><h2 id="bundler" tabindex="-1">Bundler <a class="header-anchor" href="#bundler" aria-label="Permalink to &quot;Bundler&quot;">​</a></h2><p>Outil qui rassemble tous les fichiers de notre code en un bundle.</p><ul><li><p>Il modularise, transpile et compresse notre code</p></li><li><p>Il gère tous les assets (JS, styles, images)</p></li></ul><p>Exemples :</p><ul><li><a href="https://webpack.js.org" target="_blank" rel="noreferrer">Webpack</a></li><li><a href="https://parceljs.org" target="_blank" rel="noreferrer">Parcel</a></li><li><a href="https://rollupjs.org" target="_blank" rel="noreferrer">Rollup</a></li><li><a href="https://esbuild.github.io" target="_blank" rel="noreferrer">esbuild</a></li></ul><h2 id="transpiler" tabindex="-1">Transpiler <a class="header-anchor" href="#transpiler" aria-label="Permalink to &quot;Transpiler&quot;">​</a></h2><p>Outil qui transpile notre code moderne (syntaxes JS ES6, JSX) en code JS compatible avec tous les navigateurs.</p><p>Exemples :</p><ul><li><a href="https://babeljs.io/" target="_blank" rel="noreferrer">Babel</a></li><li><a href="https://swc.rs/" target="_blank" rel="noreferrer">SWC</a></li></ul><h2 id="linter" tabindex="-1">Linter <a class="header-anchor" href="#linter" aria-label="Permalink to &quot;Linter&quot;">​</a></h2><p>Outil d&#39;analyse de code qui permet de détecter les erreurs et les problèmes de syntaxe.</p><p>Exemples :</p><ul><li><a href="https://eslint.org" target="_blank" rel="noreferrer">ESLint</a></li><li><a href="https://www.jslint.com" target="_blank" rel="noreferrer">JSLint</a></li></ul><h3 id="linter-1-2" tabindex="-1">Linter 1/2 <a class="header-anchor" href="#linter-1-2" aria-label="Permalink to &quot;Linter 1/2&quot;">​</a></h3><p>Analyse le code, fournit des conseils et des bonnes pratiques, aide au formatage, ...</p><ul><li>Votre meilleur ami. </li><li>Vous pouvez comptez sur lui. </li><li>Parfois un peu agaçant car il a toujours raison 😛 </li></ul><h3 id="linter-2-2" tabindex="-1">Linter 2/2 <a class="header-anchor" href="#linter-2-2" aria-label="Permalink to &quot;Linter 2/2&quot;">​</a></h3><p>On va utiliser la configuration proposée par un acteur important de la communauté JS / React</p><p><strong><a href="https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/react.js" target="_blank" rel="noreferrer">Airbnb</a></strong></p><hr><h1 id="allons-utiliser-tout-ca" tabindex="-1">Allons utiliser tout ça ! <a class="header-anchor" href="#allons-utiliser-tout-ca" aria-label="Permalink to &quot;Allons utiliser tout ça !&quot;">​</a></h1>`,92),t=[l];function h(p,r,k,d,o,c){return i(),a("div",null,t)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};

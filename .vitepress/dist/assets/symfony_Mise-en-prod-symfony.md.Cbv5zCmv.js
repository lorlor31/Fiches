import{_ as s,c as n,o as a,a2 as p}from"./chunks/framework.TebtTzPX.js";const f=JSON.parse('{"title":"MISE EN PROD D UN PROJET SYMFONY","description":"","frontmatter":{},"headers":[],"relativePath":"symfony/Mise-en-prod-symfony.md","filePath":"symfony/Mise-en-prod-symfony.md"}'),e={name:"symfony/Mise-en-prod-symfony.md"},l=p(`<h1 id="mise-en-prod-d-un-projet-symfony" tabindex="-1">MISE EN PROD D UN PROJET SYMFONY <a class="header-anchor" href="#mise-en-prod-d-un-projet-symfony" aria-label="Permalink to &quot;MISE EN PROD D UN PROJET SYMFONY&quot;">​</a></h1><h2 id="se-connecter-en-ssh" tabindex="-1">Se connecter en ssh <a class="header-anchor" href="#se-connecter-en-ssh" aria-label="Permalink to &quot;Se connecter en ssh&quot;">​</a></h2><p><code>ssh mon_adresse_de_connexion@hebergeur.com</code> Virer l&#39;empreinte avec la commande proposée ds le terminal. Puis relancer la connexion ssh.</p><h2 id="installer-les-logiciels" tabindex="-1">Installer les logiciels <a class="header-anchor" href="#installer-les-logiciels" aria-label="Permalink to &quot;Installer les logiciels&quot;">​</a></h2><h3 id="script-de-ben-a-mettre-dans-un-fichier-installation-serveur-sh" tabindex="-1">Script de Ben à mettre dans un fichier installation-serveur.sh <a class="header-anchor" href="#script-de-ben-a-mettre-dans-un-fichier-installation-serveur-sh" aria-label="Permalink to &quot;Script de Ben à mettre dans un fichier installation-serveur.sh&quot;">​</a></h3><p>le lancer en tapant <code>sh installation-serveur.sh</code> et fournir ses username et mdp</p><p>===================================================</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>#!/bin/sh</span></span>
<span class="line"><span>echo &quot;*********************************************&quot;</span></span>
<span class="line"><span>echo &quot;*  Bienvenue dans le script d&#39;installation  *&quot;</span></span>
<span class="line"><span>echo &quot;*********************************************&quot;</span></span>
<span class="line"><span>echo &quot; &quot;</span></span>
<span class="line"><span>read -p &quot;appuyez sur entrée pour lancer l&#39;installation&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>USER_NAME=$USER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installUpdate()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # mise à jour de la base logicielle</span></span>
<span class="line"><span>  sudo apt-get update</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # mise à jour des logiciels préinstallés</span></span>
<span class="line"><span>  sudo apt-get -y upgrade</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installEssentials()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  #installation de nano</span></span>
<span class="line"><span>  sudo apt-get install -y nano</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # installation zip</span></span>
<span class="line"><span>  sudo apt-get install -y unzip</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>reinitMySQL()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  sudo mysql_install_db --user=mysql</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installApache()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # installation apache</span></span>
<span class="line"><span>  sudo apt-get install -y apache2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # activation du mod rewrite</span></span>
<span class="line"><span>  sudo a2enmod rewrite</span></span>
<span class="line"><span>  sudo service apache2 restart</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>configureApache()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # modification du AllowOverride</span></span>
<span class="line"><span>  sudo sed -i &#39;/&lt;Directory \\/var\\/www\\/&gt;/,/&lt;\\/Directory&gt;/ s/AllowOverride None/AllowOverride all/&#39; /etc/apache2/apache2.conf</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # configuration des droits</span></span>
<span class="line"><span>  sudo chown -R $USER_NAME:www-data /var/www/html</span></span>
<span class="line"><span>  sudo chmod -R 775 /var/www/html</span></span>
<span class="line"><span>  sudo chmod g+s /var/www/html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # suppression du fichier index.html par défaut pour avoir le listing des répertoires</span></span>
<span class="line"><span>  sudo rm -rf /var/www/html/index.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # redémarrage d&#39;Apache</span></span>
<span class="line"><span>  sudo service apache2 restart</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installPHP()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # installation php 8.2</span></span>
<span class="line"><span>  sudo add-apt-repository ppa:ondrej/php</span></span>
<span class="line"><span>  sudo apt update</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-intl</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-common</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-cli</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-mysql</span></span>
<span class="line"><span>  sudo apt-get install -y libapache2-mod-php8.2</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-mbstring</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-json</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-xml</span></span>
<span class="line"><span>  sudo apt-get install -y php8.2-xdebug</span></span>
<span class="line"><span>  sudo service apache2 restart</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>configurePHP()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  sudo php -r &quot;\\$ini=glob(&#39;/etc/php/*/apache2/php.ini&#39;)[0]; \\$buffer=file_get_contents(\\$ini); \\$buffer=str_replace(&#39;display_errors = Off&#39;, &#39;display_errors = On&#39;,\\$buffer); file_put_contents(\\$ini, \\$buffer);&quot;;</span></span>
<span class="line"><span>  sudo service apache2 restart</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installComposer()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # composer</span></span>
<span class="line"><span>  cd /tmp</span></span>
<span class="line"><span>  php -r &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;</span></span>
<span class="line"><span>  php composer-setup.php --quiet</span></span>
<span class="line"><span>  php -r &quot;unlink(&#39;composer-setup.php&#39;);&quot;</span></span>
<span class="line"><span>  sudo mv composer.phar /usr/local/bin/composer</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installMySQL()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # installation mariadb-server</span></span>
<span class="line"><span>  sudo apt-get install -y mariadb-server</span></span>
<span class="line"><span>  sudo service mysql start</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>configureMysql()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # configuration mysql</span></span>
<span class="line"><span>  read -p &quot;BDD User name ? &quot; BDD_USER_NAME</span></span>
<span class="line"><span>  echo $BDD_USER_NAME;</span></span>
<span class="line"><span>  read -p &quot;BDD password ? &quot; BDD_USER_PASSWORD</span></span>
<span class="line"><span>  echo $BDD_USER_PASSWORD</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  sudo  mysql  &lt;&lt;EOF </span></span>
<span class="line"><span>CREATE USER \${BDD_USER_NAME}@localhost IDENTIFIED BY &#39;\${BDD_USER_PASSWORD}&#39;; </span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON *.* TO \\\`\${BDD_USER_NAME}\\\`@&#39;localhost&#39; WITH GRANT OPTION; </span></span>
<span class="line"><span>EOF</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # modify bind-address</span></span>
<span class="line"><span>  sudo php -r &quot;\\$cnf=glob(&#39;/etc/mysql/mariadb.conf.d/50-server.cnf&#39;)[0]; \\$buffer=file_get_contents(\\$cnf); \\$buffer=str_replace(&#39;127.0.0.1&#39;, &#39;0.0.0.0&#39;,\\$buffer); file_put_contents(\\$cnf, \\$buffer);&quot;;</span></span>
<span class="line"><span>  sudo service mysql restart</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>installGit()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  # installation de git</span></span>
<span class="line"><span>  sudo apt-get install -y git</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#==========================================================================================</span></span>
<span class="line"><span>#==========================================================================================</span></span>
<span class="line"><span>installUpdate</span></span>
<span class="line"><span>installEssentials</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installApache</span></span>
<span class="line"><span>configureApache</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installPHP</span></span>
<span class="line"><span>configurePHP</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installMySQL</span></span>
<span class="line"><span>configureMysql</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installComposer</span></span>
<span class="line"><span></span></span>
<span class="line"><span>installGit</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exit 0</span></span></code></pre></div><p>==========================================================</p><h2 id="cloner-le-repo-du-projet" tabindex="-1">Cloner le repo du projet <a class="header-anchor" href="#cloner-le-repo-du-projet" aria-label="Permalink to &quot;Cloner le repo du projet&quot;">​</a></h2><ol><li>Créer une clé ssh pour Github <code>ssh-keygen -t ed25519 -C &quot;vm_serveur&quot;</code></li><li>Copier la clé publique dans github--&gt;settings--&gt;SSH <code>cat /home/student/.ssh/id_ed25519.pub</code></li><li>cloner le repo dans /var/www/html</li><li>Créer le .env.local avec les bons id et bdd, mettre env à prod,</li></ol><h2 id="installer-composer" tabindex="-1">Installer Composer <a class="header-anchor" href="#installer-composer" aria-label="Permalink to &quot;Installer Composer&quot;">​</a></h2><p>se mettre dans le dossier du projet <code>sudo apt install composer</code> puis <code>composer install --no-dev</code></p><p>et composant apache <code>composer require symfony/apache-pack</code>(pour l&#39;htaccess)</p><h2 id="creer-la-bdd" tabindex="-1">Créer la BDD <a class="header-anchor" href="#creer-la-bdd" aria-label="Permalink to &quot;Créer la BDD&quot;">​</a></h2><ul><li><code>php bin/console do:da:cr</code></li><li><code>php bin/console do:mi:mi</code></li><li>si pas de données, on peut</li></ul><ol><li>créer un fichier bdd.sql avec l&#39;export sql de la bdd dedans</li><li>se connecter en CLI : <code>mysql -u VOTRE_UTILISATEUR -p </code></li><li>puis <code>USE votre_base_de_donnees;</code></li><li>puis exécuter la requête avec <code>source /chemin/vers/votre/script.sql;</code></li></ol><p>[ en fait pour l&#39;import export de la BDD , ceci a l&#39;air plus simple :</p><p>Exporter la bdd localement :</p><p><code>mysqldump -u username -p database_name &gt; database_dump.sql</code></p><p>L&#39;importer sur le serveur :</p><p><code>mysql -u username -p database_name &lt; database_dump.sql</code></p><p>]</p><h2 id="installer-adminer" tabindex="-1">Installer Adminer <a class="header-anchor" href="#installer-adminer" aria-label="Permalink to &quot;Installer Adminer&quot;">​</a></h2><p><code>sudo apt install adminer</code></p><p><code>sudo a2enconf adminer</code></p><p><code>sudo systemctl reload apache2</code></p><h2 id="ou-phpmyadmin" tabindex="-1">Ou PHPMyAdmin <a class="header-anchor" href="#ou-phpmyadmin" aria-label="Permalink to &quot;Ou PHPMyAdmin&quot;">​</a></h2><p><code>sudo apt install phpmyadmin</code></p><p>puis choisir apache2 Ben utilise Bcrypt pour chiffrer le mdp</p><h2 id="configuration-des-virtual-hosts" tabindex="-1">Configuration des virtual hosts <a class="header-anchor" href="#configuration-des-virtual-hosts" aria-label="Permalink to &quot;Configuration des virtual hosts&quot;">​</a></h2><ol><li><code>cd /etc/apache2/ </code></li><li><code>sudo chown student sites-available/ </code></li><li><code>cd sites-available/</code></li><li><code>touch monSite.conf</code></li><li><code>nano monSite.conf </code></li><li>et copier</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    &lt;VirtualHost *:80&gt;</span></span>
<span class="line"><span>	ServerName laure-seng-server.eddi.cloud</span></span>
<span class="line"><span>	DocumentRoot /var/www/html/monSite/public/</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	ErrorLog \${APACHE_LOG_DIR}/error.log</span></span>
<span class="line"><span>	CustomLog \${APACHE_LOG_DIR}/access.log combined</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	&lt;Directory /var/www/html/monSite/&gt;</span></span>
<span class="line"><span>		Options indexes</span></span>
<span class="line"><span>		AllowOverride all</span></span>
<span class="line"><span>		Allow from all</span></span>
<span class="line"><span>		Require all granted</span></span>
<span class="line"><span>	&lt;/Directory&gt;	</span></span>
<span class="line"><span>	RewriteEngine on</span></span>
<span class="line"><span>    &lt;/VirtualHost&gt;</span></span></code></pre></div><ol start="6"><li><code>sudo a2ensite monSite.conf</code></li></ol><p><code>sudo service apache2 restart</code></p><h2 id="mettre-a-jour-le-repo-clone" tabindex="-1">Mettre à jour le repo cloné <a class="header-anchor" href="#mettre-a-jour-le-repo-clone" aria-label="Permalink to &quot;Mettre à jour le repo cloné&quot;">​</a></h2><p>git pull origin maBranche</p><h1 id="problemes-possibles-astuces" tabindex="-1">Problèmes possibles /Astuces <a class="header-anchor" href="#problemes-possibles-astuces" aria-label="Permalink to &quot;Problèmes possibles /Astuces&quot;">​</a></h1><ul><li><p>Utiliser <strong>Remote SSH</strong> extension vsCode</p></li><li><p>Effacer le cache <code>php bin/console cache:clear --env=prod </code></p></li><li><p>version php à upgrader moi g la php8.3.4 <a href="https://php.watch/articles/php-8.3-install-upgrade-on-debian-ubuntu" target="_blank" rel="noreferrer">https://php.watch/articles/php-8.3-install-upgrade-on-debian-ubuntu</a></p></li><li><p>php-XML manquant <code>sudo apt install php8.2-xml</code></p></li><li><p>ou sudo apt-get update -y sudo apt-get install -y php-xml</p></li><li><p>mysql manquant <code>sudo apt install php8.2-mysql</code></p></li><li><p>pdo <code>sudo apt-get install php-pdo-mysql</code></p></li><li><p>Les erreurs sont dans var/log/apache2 error.log</p></li><li><p>Redémarrer <code>Apache sudo apachectl restart</code></p></li><li><p>ne pas oublier de rendre la VM publique</p></li><li><p>Pour mettre plusieurs sites sur le même nom de domaine, créer les fichiers mmonsite.conf dans sitesavailable et mettre à server monsite.mondomaine monsite2.mondomaine etc...</p></li><li><p>Empecher l&#39;acces au var /www/html depuis le nom de domaine : créer un fichier dans htaccess et y écrire Deny from all</p></li><li><p>ne pas oublier de générer les clés JWT</p></li><li><p>Versions de php incompatibles : pour disable une version de php sudo a2dismod php8.1 pour enable la fonction de php sudo a2enmod php7.4 <a href="https://stackoverflow.com/questions/72565619/change-php-version-in-phpinfo/74221605#74221605" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/72565619/change-php-version-in-phpinfo/74221605#74221605</a></p></li></ul>`,39),i=[l];function o(t,c,r,d,u,h){return a(),n("div",null,i)}const b=s(e,[["render",o]]);export{f as __pageData,b as default};

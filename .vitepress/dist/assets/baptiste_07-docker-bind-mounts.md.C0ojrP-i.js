import{_ as e,c as n,o,a2 as t}from"./chunks/framework.TebtTzPX.js";const k=JSON.parse('{"title":"Docker : bind mounts","description":"","frontmatter":{},"headers":[],"relativePath":"baptiste/07-docker-bind-mounts.md","filePath":"baptiste/07-docker-bind-mounts.md"}'),s={name:"baptiste/07-docker-bind-mounts.md"},a=t(`<h1 id="docker-bind-mounts" tabindex="-1">Docker : bind mounts <a class="header-anchor" href="#docker-bind-mounts" aria-label="Permalink to &quot;Docker : bind mounts&quot;">‚Äã</a></h1><p>Les <code>bind mounts</code> (points de montage en fran√ßais) permettent de &quot;monter&quot; un dossier de notre ordinateur h√¥te √† l&#39;int√©rieur du conteneur.</p><p>C&#39;est un peu comme si on branchait une cl√© USB contenant notre code sur le conteneur !</p><p>Les fichiers √† l&#39;int√©rieur de ce dossier seront donc <strong>accessibles √† la fois depuis notre ordinateur et depuis le conteneur</strong>. Ces bind mounts sont donc tr√®s pratique pour se <strong>cr√©er un environnement de d√©veloppement local</strong>, mais on y reviendra.</p><h2 id="creer-un-bind-mount" tabindex="-1">Cr√©er un bind mount <a class="header-anchor" href="#creer-un-bind-mount" aria-label="Permalink to &quot;Cr√©er un bind mount&quot;">‚Äã</a></h2><p>On ne peut cr√©er un bind mount qu&#39;√† la cr√©ation du conteneur ! On ajoute pour cela l&#39;argument <code>-v</code>, <code>--volume</code> ou <code>--mount</code> √† notre commande <code>docker run</code>.</p><p>üí° L&#39;argument <code>--mount</code> a une syntaxe un peu plus complexe et un fonctionnement diff√©rent des arguments <code>-v</code> ou <code>--volume</code>, nous le verrons plus tard.</p><p>Apr√®s l&#39;argument <code>-v</code>, nous allons devoir pr√©ciser <strong>deux chemins</strong> s√©par√©s par le caract√®re <code>:</code>. Le premier chemin correspond au dossier sur l&#39;ordinateur h√¥te, le second correspond √† <strong>l&#39;emplacement dans lequel on souhaite monter le dossier</strong>.</p><p>Par exemple, si on veut monter notre dossier <code>front</code> √† l&#39;emplacement <code>/usr/local/apache2/htdocs</code> dans notre conteneur <code>apache</code>, on va utiliser la commande suivante, <strong>√† lancer depuis la racine de ce d√©p√¥t</strong> :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -dp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8000:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./front:/usr/local/apache2/htdocs/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> httpd</span></span></code></pre></div><blockquote><p>C&#39;est quoi, ce dossier <code>/usr/local/apache2/htdocs</code> ? ü§î</p></blockquote><p>Le dossier <code>/usr/local/apache2/htdocs</code> est le <code>DocumentRoot</code> (vous vous souvenez ? on en a parl√© hier !) utilis√© par l&#39;image <code>httpd</code> pour le virtual host par d√©faut d&#39;Apache. En g√©n√©ral c&#39;est plut√¥t <code>/var/www/html</code>, mais dans le cas pr√©sent ce n&#39;est pas le cas. On peut trouver cette information dans la <a href="https://hub.docker.com/_/httpd" target="_blank" rel="noreferrer">documentation de l&#39;image sur le DockerHub</a>.</p><p>Ouvrez votre navigateur et rendez-vous √† l&#39;adresse <a href="http://localhost:8000/" target="_blank" rel="noreferrer">http://localhost:8000/</a>, vous devriez y trouver le frontend de notre application Pomodor&#39;O üéâ</p><h2 id="utiliser-les-bind-mounts-pour-creer-un-environnement-de-dev" tabindex="-1">Utiliser les bind mounts pour cr√©er un environnement de d√©v <a class="header-anchor" href="#utiliser-les-bind-mounts-pour-creer-un-environnement-de-dev" aria-label="Permalink to &quot;Utiliser les bind mounts pour cr√©er un environnement de d√©v&quot;">‚Äã</a></h2><p>La favicon de notre projet n&#39;est pas dans le bon dossier : elle est √† la racine du d√©p√¥t, alors qu&#39;elle devrait √™tre dans le dossier <code>front</code>. Essayez de d√©placer cette favicon au bon endroit, puis actualisez votre navigateur avec <code>Ctrl+Shift+R</code> (attention au cache !).</p><blockquote><p>Mais la modification est d√©j√† visible dans le conteneur ? üò±</p></blockquote><p>H√© oui ! On l&#39;a dit tout √† l&#39;heure, avec un <strong>bind mount</strong>, les fichiers √† l&#39;int√©rieur du dossier mont√© sont <strong>accessibles √† la fois depuis notre ordinateur et depuis le conteneur</strong> !</p><p>On peut donc d√©velopper sur notre VSCode, comme d&#39;habitude, et voir les modifications en direct gr√¢ce √† notre conteneur Apache ! Plus besoin d&#39;installer Apache sur notre machine, on peut se contenter d&#39;utiliser un conteneur Docker.</p><blockquote><p>Mais l√†, on a juste Apache, donc il est un peu tout nul ton environnement de dev !</p></blockquote><p>Essayons de monter un environnement de d√©veloppement avec Apache + PHP !</p><h3 id="environnement-de-dev-php" tabindex="-1">Environnement de d√©v PHP <a class="header-anchor" href="#environnement-de-dev-php" aria-label="Permalink to &quot;Environnement de d√©v PHP&quot;">‚Äã</a></h3><p>Si on cherche un peu sur le DockerHub, on va vite trouver une <a href="https://hub.docker.com/_/php" target="_blank" rel="noreferrer">image officielle PHP</a>.</p><p>Quand on souhaite utiliser une image, il faut jeter un coup d&#39;oeil √† sa documentation ! On peut y lire que l&#39;image propose diff√©rentes variantes :</p><ul><li><code>php:&lt;version&gt;-cli</code></li><li><code>php:&lt;version&gt;-apache</code></li><li><code>php:&lt;version&gt;-fpm</code></li><li><code>php:&lt;version&gt;-alpine</code></li></ul><p>Ah ! √áa tombe bien, l&#39;image officielle PHP dispose donc d&#39;une version avec Apache pr√©-install√© &amp; configur√©, parfait !</p><p>Cr√©eons un dossier <code>demo-php</code> √† la racine de notre d√©p√¥t, puis lan√ßons la commande suivante :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -dp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8001:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mon-env-de-dev-php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./demo-php:/var/www/html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php:8.2-apache</span></span></code></pre></div><p>üí° Je mets ici le port <code>8001</code> parce qu&#39;on a pas stopp√© notre conteneur pr√©c√©dent !</p><p>Une fois l&#39;image t√©l√©charg√©e et le conteneur lanc√©, ouvrez votre navigateur √† l&#39;adresse <a href="http://localhost:8001/" target="_blank" rel="noreferrer">http://localhost:8001/</a>. Vous devriez avoir une erreur <code>Forbidden</code>, c&#39;est normal.</p><p>Cr√©ez un fichier <code>index.php</code> dans le dossier <code>demo-php</code>, et ajoutez-y le contenu suivant :</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello from Docker !&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Actualisez la page et ...</p><p>Cet enviromment de d√©veloppement est tr√®s basique : il manque par exemple le gestionnaire de d√©pendances Composer !</p><blockquote><p>Comment on fait, si on a besoin d&#39;un environnement plus complexe ?</p></blockquote><p>On va pouvoir se connecter √† notre conteneur pour lancer des commandes √† l&#39;int√©rieur ! On d√©couvre comment faire √ßa par <a href="./08-docker-exec.html">ici</a>.</p>`,35),i=[a];function r(d,p,l,c,u,h){return o(),n("div",null,i)}const v=e(s,[["render",r]]);export{k as __pageData,v as default};

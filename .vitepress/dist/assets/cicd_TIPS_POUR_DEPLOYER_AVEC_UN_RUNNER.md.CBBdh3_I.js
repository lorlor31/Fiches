import{_ as e,c as a,o as s,a2 as n}from"./chunks/framework.BXMoTSpH.js";const m=JSON.parse('{"title":"DEPLOIEMENT AVEC UN RUNNER : Précautions - Troubleshooting","description":"","frontmatter":{},"headers":[],"relativePath":"cicd/TIPS_POUR_DEPLOYER_AVEC_UN_RUNNER.md","filePath":"cicd/TIPS_POUR_DEPLOYER_AVEC_UN_RUNNER.md"}'),l={name:"cicd/TIPS_POUR_DEPLOYER_AVEC_UN_RUNNER.md"},i=n(`<h1 id="deploiement-avec-un-runner-precautions-troubleshooting" tabindex="-1">DEPLOIEMENT AVEC UN RUNNER : Précautions - Troubleshooting <a class="header-anchor" href="#deploiement-avec-un-runner-precautions-troubleshooting" aria-label="Permalink to &quot;DEPLOIEMENT AVEC UN RUNNER : Précautions - Troubleshooting&quot;">​</a></h1><p>En cas d&#39;erreurs, quelques pistes à vérifier :</p><h2 id="dans-gitlab" tabindex="-1">Dans Gitlab : <a class="header-anchor" href="#dans-gitlab" aria-label="Permalink to &quot;Dans Gitlab :&quot;">​</a></h2><ul><li>Création des variables : <ul><li>Bien respecter le nom des variables lorsqu&#39;on les déclare dans Gitlab et notamment la <strong>présence d&#39;espaces à la fin</strong> des &quot;value&quot;.</li><li><strong>Décocher la case &quot;Protect variable&quot;</strong> pour permettre à toutes les branches d&#39;y accéder.</li></ul></li><li>Création du runner : <ul><li>Bien <strong>décocher la case activant les runners partagés</strong>.</li></ul></li></ul><h2 id="en-cas-de-problemes-avec-les-liens-url" tabindex="-1">En cas de problèmes avec les liens / URL : <a class="header-anchor" href="#en-cas-de-problemes-avec-les-liens-url" aria-label="Permalink to &quot;En cas de problèmes avec les liens / URL :&quot;">​</a></h2><ul><li>Bien déclarer l&#39;<strong>APP_URL</strong> si nécessaire dans le .env.</li><li>Mettre un fichier <strong>.htaccess dans le dossier public/</strong> pour activer la réécriture des URL.</li></ul><p>Exemple du contenu du .htaccess :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;IfModule mod_rewrite.c&gt;</span></span>
<span class="line"><span>    RewriteEngine On</span></span>
<span class="line"><span>    RewriteCond %{REQUEST_FILENAME} !-f</span></span>
<span class="line"><span>    RewriteRule ^(.*)$ index.php [QSA,L]</span></span>
<span class="line"><span>&lt;/IfModule&gt;</span></span></code></pre></div><h2 id="en-cas-de-probleme-avec-la-modification-de-la-base-de-donnees" tabindex="-1">En cas de problème avec la modification de la base de données <a class="header-anchor" href="#en-cas-de-probleme-avec-la-modification-de-la-base-de-donnees" aria-label="Permalink to &quot;En cas de problème avec la modification de la base de données&quot;">​</a></h2><ul><li><strong>Avant de déployer</strong>, il faut avoir créé la base de données avec les identifiant et mot de passe fournis dans le .env .</li><li>Ensuite, en cas de problème, bien <strong>vérifier les variables Gitlab</strong> DATABASE_USER, DATABASE_PWD et DATABASE_URL ( pas d&#39;espaces inutiles et case &quot;Protect variable&quot; décochée ).</li><li>En général, on va appliquer les migrations sur les branches <strong>dev</strong> et <strong>staging</strong>* et le faire manuellement sur la branche <strong>prod</strong> . On peut avoir un aperçu des requêtes sql correspondant avec : <code>php bin/console doctrine:migrations:migrate --dry-run</code></li><li>Si on veut exporter une BDD dans le runner : <code>mysqldump -u \${DATABASE_USER} -p\${DATABASE_PWD} \${DATABASE_NAME} &gt; database_dump.sql</code></li><li>Pour importer une BDD : <code>mysql -u \${DATABASE_USER} -p\${DATABASE_PWD} \${DATABASE_NAME} &lt; database_dump.sql</code> Il faut bien avoir les droits de process pour faire ces deux dernières manipulations. Pour attribuer les droits de process à un utilisateur :</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT PROCESS ON *.* TO &#39;DATABASE_USER&#39;@&#39;localhost&#39;;</span></span>
<span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre></div><p>NB : ne pas mettre le nom des variables entre guillements dans le script.</p><ul><li>Pour appliquer les fixtures sur le serveur : <code>php bin/console doctrine:fixtures:load</code></li></ul><h2 id="tips-pour-symfony" tabindex="-1">Tips pour Symfony <a class="header-anchor" href="#tips-pour-symfony" aria-label="Permalink to &quot;Tips pour Symfony&quot;">​</a></h2><ul><li>Pour faire disparaître la Debug Bar, mettre ces lignes dans le fichier /config/packages/dev/web_profiler.yaml :</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>web_profiler:</span></span>
<span class="line"><span>    toolbar: &#39;%kernel.debug%&#39;</span></span>
<span class="line"><span>    intercept_redirects: false</span></span></code></pre></div><ul><li>Si PhpStan décèle des erreurs liées au cache, on peut exclure le dossier du cache :</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>parameters:</span></span>
<span class="line"><span>    excludePaths:</span></span>
<span class="line"><span>        - var/cache/</span></span></code></pre></div><h2 id="tips-pour-npm-yarn" tabindex="-1">Tips pour NPM / Yarn <a class="header-anchor" href="#tips-pour-npm-yarn" aria-label="Permalink to &quot;Tips pour NPM / Yarn&quot;">​</a></h2><ul><li>On peut <strong>choisir la version de npm</strong> en le précisant après la commande nvm install : <code>- nvm install 20.15.1</code></li><li>La commande <code>npm audit fix</code> permet de déceler et remplacer les packages présentant des vulnérabilités.</li></ul>`,20),t=[i];function r(o,p,c,d,u,h){return s(),a("div",null,t)}const g=e(l,[["render",r]]);export{m as __pageData,g as default};

import{_ as n,c as l,j as e,a as i,t,a2 as a,o as p}from"./chunks/framework.CEgrwLex.js";const y=JSON.parse('{"title":"VirtualHosts Apache","description":"","frontmatter":{},"headers":[],"relativePath":"baptiste/03-virtual-hosts.md","filePath":"baptiste/03-virtual-hosts.md"}'),r={name:"baptiste/03-virtual-hosts.md"},o=a(`<hr><h2 id="prev-text-04-deploiement-app-laravel-link-guide-04-deploiement-app-laravel" tabindex="-1">prev: text: &#39;04-deploiement-app-laravel&#39; link: &#39;/guide/04-deploiement-app-laravel&#39; <a class="header-anchor" href="#prev-text-04-deploiement-app-laravel-link-guide-04-deploiement-app-laravel" aria-label="Permalink to &quot;prev:
  text: &#39;04-deploiement-app-laravel&#39;
  link: &#39;/guide/04-deploiement-app-laravel&#39;&quot;">‚Äã</a></h2><h1 id="virtualhosts-apache" tabindex="-1">VirtualHosts Apache <a class="header-anchor" href="#virtualhosts-apache" aria-label="Permalink to &quot;VirtualHosts Apache&quot;">‚Äã</a></h1><p>On vient de voir comment d√©ployer en production un site statique, compos√© exclusivement de code HTML, CSS et JS.</p><p>Sauf que notre appli, elle n&#39;est pas compos√©e que d&#39;un front-end ! Il faut aussi qu&#39;on d√©ploie le back-end PHP !</p><blockquote><p>Mais on peut d√©ployer plusieurs appli, ou il nous faut un deuxi√®me serveur ?</p></blockquote><p>On <em>pourrait</em> utiliser un deuxi√®me serveur, c&#39;est d&#39;ailleurs souvent le cas dans le monde pro. Mais on peut aussi <strong>h√©berger plusieurs applications sur un m√™me serveur</strong>, et pour √ßa on utilise ... les <strong>Virtual Hosts</strong> Apache !</p><p>üí° il existe un √©quivalent sur d&#39;autres logiciels serveurs web (comme Nginx par exemple).</p><h2 id="virtualhosts-apache-c-est-quoi" tabindex="-1">VirtualHosts Apache : c&#39;est quoi ? <a class="header-anchor" href="#virtualhosts-apache-c-est-quoi" aria-label="Permalink to &quot;VirtualHosts Apache : c&#39;est quoi ?&quot;">‚Äã</a></h2><p>Les VirtualHosts Apache permettent d&#39;h√©berger plusieurs sites web sur un seul et m√™me serveur.</p><blockquote><p>Mais si on a plusieurs sites sur le m√™me serveur, comment on va acc√©der √† un site en particulier ?</p></blockquote><p>Pour acc√©der √† un site sp√©cifique sur un serveur donn√©, il y a plusieurs possibilit√©s :</p><ul><li><strong>Par un port sp√©cifique √† chaque site</strong>, si on a qu&#39;un seul nom de domaine, exemple : <ul><li>monsupersite.fr ‚û°Ô∏è acc√©de √† un premier site sur le port 80 ou 443 (si HTTPS)</li><li>monsupersite.fr:8080 ‚û°Ô∏è acc√©de √† un deuxi√®me site sur le port 8080</li><li>monsupersite.fr:1234 ‚û°Ô∏è acc√©de √† un troisi√®me site sur le port 1234</li><li>etc.</li></ul></li><li><strong>Par un nom de domaine sp√©cifique √† chaque site</strong>, exemple : <ul><li>monsupersite.fr ‚û°Ô∏è acc√©de √† un premier site</li><li>blog.monsupersite.fr ‚û°Ô∏è acc√©de √† un deuxi√®me site</li><li>sitedetest.fr ‚û°Ô∏è acc√©de √† un troisi√®me site</li><li>etc.</li></ul></li></ul><p>Dans le cas des nom de domaines, je rappelle que <strong>ces diff√©rents sites peuvent tout √† fait √™tre h√©berg√©s sur un m√™me serveur !</strong></p><blockquote><p>Oui mais du coup, comment on associe un port ou un nom de domaine √† un site sp√©cifique sur notre serveur ?</p></blockquote><p>Gr√¢ce aux VirtualHosts üí™ <strong>Un VirtualHost correspondra √† un site h√©berg√© sur notre serveur.</strong></p><h2 id="documentroot" tabindex="-1">DocumentRoot <a class="header-anchor" href="#documentroot" aria-label="Permalink to &quot;DocumentRoot&quot;">‚Äã</a></h2><p>Chaque site h√©berg√© sur notre serveur est stock√© dans un dossier sp√©cifique, par exemple :</p><ul><li>Notre blog oNews fait en S01 est stock√© dans <code>/var/www/html/S01/S01-onews-.../</code></li><li>L&#39;application Adminer est dans le dossier <code>/var/www/html/adminer/</code></li><li>etc.</li></ul><p>Pour rappel, un serveur est un ordinateur comme les autres üòâ Nos sites sont donc dans des dossiers stock√©s sur cet ordinateur ! (et g√©n√©ralement ils sont dans /var/www/html/...)</p><p><strong>Le chemin absolu du dossier (depuis la racine <code>/</code>) contenant chacun de nos sites s&#39;appelle le DocumentRoot</strong>, ce dossier sera la racine (root) de notre site, le point d&#39;entr√©e de nos visiteurs. D&#39;ailleurs, pour les sites en MVC (petite piq√ªre de rappel üíâ), il faudra faire attention √† faire pointer le DocumentRoot sur le sous-dossier public üòâ</p><p>C&#39;est tout ce qu&#39;il y a √† savoir sur le DocumentRoot, c&#39;est le dossier racine que l&#39;on veut exposer √† nos visiteurs pour un site sp√©cifique sur notre serveur !</p><blockquote><p>Ok, c&#39;est bien beau tout √ßa, mais on sait toujours pas comment √ßa fonctionne un virtual host !</p></blockquote><h2 id="la-configuration-des-vhosts-sites-available-sites-enabled-a2ensite-a2dissite" tabindex="-1">La configuration des VHosts : sites-available &amp; sites-enabled, a2ensite &amp; a2dissite <a class="header-anchor" href="#la-configuration-des-vhosts-sites-available-sites-enabled-a2ensite-a2dissite" aria-label="Permalink to &quot;La configuration des VHosts : sites-available &amp; sites-enabled, a2ensite &amp; a2dissite&quot;">‚Äã</a></h2><p>Nous allons configurer chaque VirtualHost de notre serveur (pour rappel, un site = un VirtualHost) gr√¢ce √† un fichier <code>nom_site.conf</code>.</p><p>Ce fichier devra √™tre plac√© dans le dossier <code>/etc/apache2/sites-available/</code>.</p><p>Retournez sur votre terminal (celui de la VM Serveur Kourou, sur laquelle vous √™tes connect√© en SSH), et tapez les commandes suivantes :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apache2/sites-available/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span></span></code></pre></div><p>La commande <code>ls</code> affiche les diff√©rents sites disponibles (available) sur votre serveur. Par d√©faut, il y en a deux, <code>000-default.conf</code> et <code>default-ssl.conf</code> qui peuvent servir d&#39;exemple.</p><p>Le virtual host <code>000-default.conf</code> on l&#39;utilise depuis le d√©but du socle sans le savoir : c&#39;est lui qui nous permettait d&#39;acc√©der √† tous nos projets dans le dossier <code>/var/www/html</code> depuis <a href="http://localhost" target="_blank" rel="noreferrer">http://localhost</a> sur notre t√©l√©porteur.</p><p>C&#39;est parti, on va cr√©er ensemble un nouveau virtual host pour notre front-end üòÅ</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pomodoro-front.conf</span></span></code></pre></div><p><code>nano</code> est un <strong>√©diteur de texte en ligne de commande</strong> : il nous permet de cr√©er un nouveau fichier et de modifier son contenu directement depuis le terminal.</p><p>Copiez-collez les instructions suivantes dans l&#39;√©diteur de texte nano : (rappel, pour coller utiliser Ctrl+Shift+V !)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VirtualHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">80&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Adresse (nom de domaine) sur laquelle on va aller pour acc√©der √† l&#39;application</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ATTENTION, bien remplacer {{PSEUDO-GITHUB}} par votre pseudo GitHub !</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ServerName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {{PSEUDO-GITHUB}}-server.eddi.cloud</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Chemin de l&#39;application (racine du serveur web)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ATTENTION, bien remplacer {{PSEUDO-GITHUB}} par votre pseudo GitHub !</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    DocumentRoot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/html/S08-PHP-Pomodor-O-{{PSEUDO-GITHUB}}/front</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Emplacement logs Apache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ErrorLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${APACHE_LOG_DIR}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/error.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CustomLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${APACHE_LOG_DIR}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/access.log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> combined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/VirtualHost</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,35),d=a('<p>Une fois que c&#39;est fait, vous pouvez appuyer sur <code>Ctrl+X</code> pour enregistrer les modifications, puis sur la touche <code>O</code> ou <code>Y</code> pour valider le nom du fichier, et enfin sur la touche Entr√©e pour fermer nano.</p><p>üí° Cette configuration nous permet d&#39;<strong>associer un dossier (DocumentRoot) √† un nom de domaine (ServerName)</strong>. Le nom de domaine utilis√© doit avoir √©t√© configur√© au pr√©alable pour <em>pointer vers notre serveur</em> via un enregistrement DNS, se r√©f√©rer √† la documentation de votre h√©bergeur pour cela.</p><p>Vous pourriez par exemple acheter le nom de domaine <code>prenomnom.fr</code>, et h√©berger diff√©rents sites sur un m√™me serveur avec les sous-domaines suivants :</p><ul><li>blog.prenomnom.fr ‚û°Ô∏è dossier <code>/var/www/html/blog/</code></li><li>portfolio.prenomnom.fr ‚û°Ô∏è dossier <code>/var/www/html/portfolio/</code></li><li>cv.prenomnom.fr ‚û°Ô∏è dossier <code>/var/www/html/cv/</code></li><li>etc.</li></ul><p>Pour v√©rifier que tout a bien fonctionn√©, lancez la commande suivante :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apache2/sites-available/pomodoro-front.conf</span></span></code></pre></div>',6),h=a(`<p>Nous allons maintenant activer ce nouveau site ! Pour cela, lancez les commandes suivantes dans votre terminal :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2ensite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pomodoro-front</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><p>Si tout s&#39;est bien pass√©, notre site/VirtualHost est maintenant activ√©.</p><p>Pour v√©rifier, lancez la commande suivante :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apache2/sites-enabled/pomodoro-front.conf</span></span></code></pre></div><p>Vous devriez voir √† nouveau le contenu de notre VirtualHost.</p><p>Regardez attentivement la commande que l&#39;on vient de taper : on a demand√© √† notre terminal de nous afficher un fichier dans le dossier <code>/etc/apache2/sites-enabled/</code>, or on avait pourtant mis notre VirtualHost dans <code>sites-available</code> ? ü§î</p><p>C&#39;est justement ce que fait la commande <code>a2ensite</code>, elle copie notre fichier dans le dossier sites-enabled d&#39;Apache, qui contient les VirtualHosts actifs.</p><p>Pour d√©sactiver notre site (retirer le fichier du dossier sites-enabled), nous pouvons utiliser la commande <code>a2dissite</code>. On va d&#39;ailleurs s&#39;en servir pour d√©sactiver le virtual host par d√©faut, dont nous n&#39;avons plus besoin :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2dissite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 000-default</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><p>La commande <code>sudo systemctl reload apache2</code> permet de recharger Apache afin qu&#39;il prenne en compte nos modifications.</p><p>‚ö†Ô∏è Probl√®me : adminer ne fonctionne plus ...</p><h2 id="un-virtualhost-pour-adminer" tabindex="-1">Un virtualhost pour Adminer <a class="header-anchor" href="#un-virtualhost-pour-adminer" aria-label="Permalink to &quot;Un virtualhost pour Adminer&quot;">‚Äã</a></h2><p>Adminer est un site √† part enti√®re, donc on va devoir lui cr√©er son propre virtual host.</p><p>Lancez la commande suivante :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apache2/sites-available/adminer.conf</span></span></code></pre></div><p>Puis collez le contenu suivant dans ce fichier :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VirtualHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">80&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Adresse (nom de domaine) sur laquelle on va aller pour acc√©der √† l&#39;application</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ATTENTION, bien remplacer {{PSEUDO-GITHUB}} par votre pseudo GitHub !</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ServerName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adminer.{{PSEUDO-GITHUB}}-server.eddi.cloud</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Chemin de l&#39;application (racine du serveur web)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    DocumentRoot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/html/adminer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Emplacement logs Apache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ErrorLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${APACHE_LOG_DIR}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/error.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CustomLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${APACHE_LOG_DIR}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/access.log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> combined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/VirtualHost</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,18),u=a(`<p>Appuyez sur <code>Ctrl+X</code> pour enregistrer les modifications, puis sur la touche <code>O</code> ou <code>Y</code> pour valider le nom du fichier, et enfin sur la touche Entr√©e pour fermer nano.</p><p>Activez le nouveau virtual host et relancez Apache avec les commandes :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2ensite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adminer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><p>Rendez-vous sur <a href="http://adminer.PSEUDOGH-server.eddi.cloud/" target="_blank" rel="noreferrer">http://adminer.PSEUDOGH-server.eddi.cloud/</a>, vous devriez acc√©der √† Adminer ! üéâ</p><h2 id="un-virtual-host-pour-le-back-end" tabindex="-1">Un virtual host pour le back-end <a class="header-anchor" href="#un-virtual-host-pour-le-back-end" aria-label="Permalink to &quot;Un virtual host pour le back-end&quot;">‚Äã</a></h2><p>Tant qu&#39;on y est, cr√©eons √©galement le virtual host pour notre back-end Laravel.</p><p>Lancez la commande suivante :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apache2/sites-available/pomodoro-back.conf</span></span></code></pre></div><p>Puis collez le contenu suivant dans ce fichier :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VirtualHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">80&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Adresse (nom de domaine) sur laquelle on va aller pour acc√©der √† l&#39;application</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ATTENTION, bien remplacer {{PSEUDO-GITHUB}} par votre pseudo GitHub !</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ServerName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend.{{PSEUDO-GITHUB}}-server.eddi.cloud</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Chemin de l&#39;application (racine du serveur web)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ATTENTION, bien remplacer {{PSEUDO-GITHUB}} par votre pseudo GitHub !</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    DocumentRoot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/html/S08-PHP-Pomodor-O-{{PSEUDO-GITHUB}}/back/public</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Emplacement logs Apache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ErrorLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${APACHE_LOG_DIR}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/error.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CustomLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${APACHE_LOG_DIR}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/access.log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> combined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/VirtualHost</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Activez le nouveau virtual host et relancez Apache avec les commandes :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2ensite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pomodoro-back</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><p>Si vous ouvrez <a href="http://backend.PSEUDOGH-server.eddi.cloud/" target="_blank" rel="noreferrer">http://backend.PSEUDOGH-server.eddi.cloud/</a> dans votre navigateur, vous arrivez sur une page blanche ... et c&#39;est normal ! Il nous reste quelques √©tapes pour mettre un projet Laravel en production, et √ßa se passe par <a href="./04-deploiement-app-laravel.html">ici</a>.</p>`,13);function c(s,k,m,g,v,F){return p(),l("div",null,[o,e("p",null,[i("‚ö†Ô∏è IMPORTANT : n'oubliez pas de remplacer "),e("code",null,t(s.PSEUDO-s.GITHUB),1),i(" par votre pseudo Github.")]),d,e("p",null,[i("Vous devriez voir le m√™me contenu que nous avons copi√©/coll√© s'afficher ! (√† ceci pr√®s que "),e("code",null,t(s.PSEUDO-s.GITHUB),1),i(" a √©t√© remplac√© par votre pseudo Github)")]),h,e("p",null,[i("‚ö†Ô∏è IMPORTANT : n'oubliez pas de remplacer "),e("code",null,t(s.PSEUDO-s.GITHUB),1),i(" par votre pseudo Github.")]),u])}const E=n(r,[["render",c]]);export{y as __pageData,E as default};

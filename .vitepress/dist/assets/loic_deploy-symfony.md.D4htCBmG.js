import{_ as e,c as s,o as i,a2 as a}from"./chunks/framework.CEgrwLex.js";const g=JSON.parse('{"title":"D√©ployer une application Symfony","description":"","frontmatter":{},"headers":[],"relativePath":"loic/deploy-symfony.md","filePath":"loic/deploy-symfony.md"}'),t={name:"loic/deploy-symfony.md"},n=a(`<h1 id="deployer-une-application-symfony" tabindex="-1">D√©ployer une application Symfony <a class="header-anchor" href="#deployer-une-application-symfony" aria-label="Permalink to &quot;D√©ployer une application Symfony&quot;">‚Äã</a></h1><blockquote><p>‚ÑπÔ∏è Tout au long de ce tutoriel, tu rencontreras des sections &quot;SPOILER&quot; que tu pourras d√©plier pour obtenir des explications sur ce que tu fais et pourquoi tu le fais.</p></blockquote><h2 id="etape-0-la-vm-server-kourou" tabindex="-1">√âtape 0 : La VM Server Kourou <a class="header-anchor" href="#etape-0-la-vm-server-kourou" aria-label="Permalink to &quot;√âtape 0 : La VM Server Kourou&quot;">‚Äã</a></h2><details><summary>SPOILER: C&#39;est quoi la VM Server Kourou ?</summary><p>Si tu dormais pendant la saison 8 du socle (ou si tu as beaucoup dormi depuis), voici un bref rappel de ce qu&#39;est la VM Server Kourou :</p><blockquote><p>O&#39;clock met √† ta disposition un serveur virtuel dans le ‚òÅÔ∏è cloud ‚òÅÔ∏è pour t&#39;aider √† t&#39;entra√Æner au d√©ploiement de tes projets web et √† l&#39;administration syst√®me. Ce serveur virtuel t&#39;est fourni avec un nom de domaine.</p></blockquote></details><p>üòâ Rends-toi sur la page d&#39;administration de ta VM Server Kourou, tu en auras besoin pour la suite de ce tutoriel : <a href="https://kourou.oclock.io/ressources/vm-cloud/" target="_blank" rel="noreferrer">https://kourou.oclock.io/ressources/vm-cloud/</a></p><blockquote><p>‚ÑπÔ∏è Certaines commandes de ce tutoriel te demanderont le mot de passe administrateur de ta VM Server Kourou, tu trouveras celui-ci sur la page d&#39;administration.</p></blockquote><h3 id="initialiser-la-vm" tabindex="-1">Initialiser la VM <a class="header-anchor" href="#initialiser-la-vm" aria-label="Permalink to &quot;Initialiser la VM&quot;">‚Äã</a></h3><details><summary>SPOILER: Premiers pas</summary><p>Si tu n&#39;as jamais utilis√© la VM Server Kourou ou si tu l&#39;as supprim√©e, clique sur le bouton &quot;Cr√©er la VM&quot;.</p><p>Pour repartir d&#39;une VM vierge, clique sur le bouton &quot;R√©installer la VM&quot;.</p><p>‚ö†Ô∏è Dans ces deux cas, tu devras cr√©er une nouvelle cl√© SSH sur la VM Server Kourou pour pouvoir cloner et pull le projet depuis GitHub. Tu trouveras la proc√©dure √† suivre dans la <a href="https://kourou.oclock.io/ressources/fiche-recap/git-et-github/#cr%c3%a9er-une-cl%c3%a9-ssh-pour-github" target="_blank" rel="noreferrer">fiche r√©cap d√©di√©e √† Git et GitHub</a>.</p></details><p>Si ta VM est d√©j√† pr√™te, clique sur &quot;D√©marrer la VM&quot;.</p><h3 id="se-connecter-a-la-vm" tabindex="-1">Se connecter √† la VM <a class="header-anchor" href="#se-connecter-a-la-vm" aria-label="Permalink to &quot;Se connecter √† la VM&quot;">‚Äã</a></h3><p>Une fois la VM Server d√©marr√©e, connecte-toi en SSH. Tu trouveras la commande √† utiliser dans ton terminal sur la page d&#39;administration de ta VM, elle devrait ressembler √† ceci :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student@pseudo-server.eddi.cloud</span></span></code></pre></div><p>‚ö†Ô∏è Tout le temps de ta connexion √† la VM, <strong><em>ne ferme surtout pas la page d&#39;administration</em></strong> car c&#39;est elle qui permet d&#39;autoriser la connexion depuis ton IP !</p><h2 id="etape-1-installer-l-environnement-de-production" tabindex="-1">√âtape 1 : Installer l&#39;environnement de production <a class="header-anchor" href="#etape-1-installer-l-environnement-de-production" aria-label="Permalink to &quot;√âtape 1 : Installer l&#39;environnement de production&quot;">‚Äã</a></h2><h3 id="installation-du-sgbdr-mariadb-mysql" tabindex="-1">Installation du SGBDR MariaDB (MySQL) <a class="header-anchor" href="#installation-du-sgbdr-mariadb-mysql" aria-label="Permalink to &quot;Installation du SGBDR MariaDB (MySQL)&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mariadb-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mariadb-client</span></span></code></pre></div><details><summary>SPOILER: D√©tail des commandes</summary><p>On commence par mettre √† jour les catalogues des logiciels disponibles sur le serveur (la commande <code>sudo</code> permet d&#39;excuter la commande avec les droits administrateur) :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><p>Puis on installe les packages (logiciels) n√©cessaires pour g√©rer des bases de donn√©es sur le serveur :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mariadb-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mariadb-client</span></span></code></pre></div><p>Ici, on a choisi d&#39;installer MariaDB qui est une version open source de MySQL. On a besoin du package <code>mariadb-server</code> pour avoir un serveur de bases de donn√©es, ainsi que des outils fournis par le package <code>mariadb-client</code> (notamment la commande <code>mysql</code>) pour interagir avec ces bases de donn√©es.</p><p>L&#39;option <code>-y</code> permet de dire au logiciel <code>apt</code> qui sert √† g√©rer les packages install√©s sur le syst√®me de ne pas demander confirmation pour installer les packages demand√©s.</p></details><h3 id="installation-du-serveur-http-apache" tabindex="-1">Installation du serveur HTTP Apache <a class="header-anchor" href="#installation-du-serveur-http-apache" aria-label="Permalink to &quot;Installation du serveur HTTP Apache&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><details><summary>SPOILER: D√©tail de la commande</summary><p>Apache est le serveur HTTP que ton serveur va utiliser pour rendre ton application accessible au reste du monde. C&#39;est lui qui permettra de dialoguer avec des navigateurs web et qui ex√©cutera les fichiers PHP.</p><p>Cette commande est la m√™me que pour l&#39;installation du SGBDR, sauf qu&#39;on installe seulement le package <code>apache2</code> cette fois.</p></details><h3 id="installation-de-php-8" tabindex="-1">Installation de PHP 8 <a class="header-anchor" href="#installation-de-php-8" aria-label="Permalink to &quot;Installation de PHP 8&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php8.1-common</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php8.1-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php8.1-mysql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php8.1-intl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php8.1-xml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php8.1-zip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libapache2-mod-php8.1</span></span></code></pre></div><details><summary>SPOILER: D√©tail de la commande</summary><p>Encore une fois, on installe des packages. Cette fois-ci, il s&#39;agit de PHP en lui-m√™me, c&#39;est-√†-dire l&#39;interpr√©teur du code ainsi que certaines de ses extensions et modules :</p><ul><li><code>php8.1-common</code> est l&#39;interpr√©teur PHP (version 8.1) en soi, il permet d&#39;ex√©cuter du code PHP</li><li><code>php8.1-cli</code> fourni l&#39;interface en ligne de commande de PHP, te permettant ainsi d&#39;interagir avec l&#39;interpr√©teur directement depuis le terminal</li><li><code>php8.1-mysql</code> est une extension de PHP qui fournit des drivers et des fonctions permettant au code d&#39;interagir avec des bases de donn√©es MySQL</li><li><code>php8.1-xml</code> est une extension de PHP qui introduit des fonctionnalit√©s de manipulation de donn√©es au format XML et ses d√©riv√©s (HTML, etc.), de telles structures sont utilis√©es par Symfony</li><li><code>php8.1-intl</code> est une extension de PHP d√©di√©e √† l&#39;internationalisation et la gestion de traductions, elle est requise par Symfony</li><li><code>php8.1-zip</code> est une extension de PHP qui lui permet de manipuler des archives ZIP, elle est notamment utilis√©e par Composer pour optimiser le t√©l√©chargement des d√©pendances</li><li><code>libapache2-mod-php8.1</code> est un module pour Apache qui lui permet d&#39;interagir avec l&#39;interpr√©teur PHP, sans lui il serait impossible de passer les informations de la requ√™te HTTP √† PHP et de comprendre les r√©ponses g√©n√©r√©es par ton code</li></ul></details><h3 id="installation-de-composer" tabindex="-1">Installation de Composer <a class="header-anchor" href="#installation-de-composer" aria-label="Permalink to &quot;Installation de Composer&quot;">‚Äã</a></h3><blockquote><p>‚ÑπÔ∏è Cette proc√©dure est directement tir√©e et adapt√©e de la <a href="https://getcomposer.org/download/" target="_blank" rel="noreferrer">documentation officielle de Composer</a></p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer-setup.php</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unlink(&#39;composer-setup.php&#39;);&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer.phar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/composer</span></span></code></pre></div><details><summary>SPOILER: D√©tail des commandes</summary><p>La premi√®re commande ex√©cute du code PHP directement dans le terminal pour t√©l√©charger le script d&#39;installation de Composer et l&#39;enregistrer dans un fichier <code>composer-setup.php</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;</span></span></code></pre></div><p>Ensuite, on utilise l&#39;interpr√©teur PHP pour ex√©cuter le script d&#39;installation (qui n&#39;est autre‚Ä¶ qu&#39;un simple script PHP !).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer-setup.php</span></span></code></pre></div><p>Une fois Composer install√©, on ex√©cute du code PHP directement dans le terminal pour supprimer le script d&#39;installation, car on n&#39;en a plus besoin. Tu peux noter que la fonction <code>unlink()</code> en PHP sert √† supprimer un fichier, elle est directement h√©rit√©e du langage C.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unlink(&#39;composer-setup.php&#39;);&quot;</span></span></code></pre></div><p>Derni√®re √©tape dans l&#39;installation de Composer : rendre la commande <code>composer</code> accessible depuis n&#39;importe o√π sur ton serveur. En effet, le script d&#39;installation se contente de faire des v√©rifications quant √† ton installation de PHP, de t√©l√©charger une archive PHP (c&#39;est-√†-dire un tr√®s gros script PHP ex√©cutable dont le code a √©t√© optimis√© pour √™tre interpr√©t√© rapidement) dans un fichier <code>composer.phar</code>. Pour rendre ce fichier ex√©cutable partout, il suffit de le d√©placer dans le r√©pertoire syst√®me <code>/usr/local/bin</code> et de lui donner le nom de la commande via lequel on souhaite l&#39;ex√©cuter, c&#39;est-√†-dire <code>composer</code> dans notre cas.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer.phar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/composer</span></span></code></pre></div></details><h2 id="etape-2-recuperer-le-projet" tabindex="-1">√âtape 2 : R√©cup√©rer le projet <a class="header-anchor" href="#etape-2-recuperer-le-projet" aria-label="Permalink to &quot;√âtape 2 : R√©cup√©rer le projet&quot;">‚Äã</a></h2><h3 id="preparation-du-repo" tabindex="-1">Pr√©paration du repo <a class="header-anchor" href="#preparation-du-repo" aria-label="Permalink to &quot;Pr√©paration du repo&quot;">‚Äã</a></h3><blockquote><p>‚ÑπÔ∏è Si le fichier <code>public/.htaccess</code> existe d√©j√† dans ton projet, tu peux directement passer √† l&#39;√©tape suivante</p></blockquote><p><strong>Depuis ta VM locale (T√©l√©porteur / VM cloud)</strong> ex√©cute cette commande dans ton projet :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symfony/apache-pack</span></span></code></pre></div><p>Si ton terminal te demande de confirmer l&#39;ex√©cution d&#39;une &quot;recipe&quot; Symfony pour le Symfony Apache Pack, accepte - ceci g√©n√®rera le fichier <code>public/.htaccess</code> dans ton projet.</p><p>Commit et push üì® ce fichier, il est indispensable pour la suite !</p><h3 id="clonage-du-repo" tabindex="-1">Clonage du repo <a class="header-anchor" href="#clonage-du-repo" aria-label="Permalink to &quot;Clonage du repo&quot;">‚Äã</a></h3><p><strong>De retour sur la VM Server Kourou</strong>, on r√©cup√®re le code de l&#39;application <strong>(‚ö†Ô∏è <em>pense √† remplacer <code>&lt;URL&gt;</code> par l&#39;URL de clonage de ton repo !!!</em>)</strong> :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> o+w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">UR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.site</span></span></code></pre></div><details><summary>SPOILER: D√©tails de la commande</summary><p>Le r√©pertoire dans lequel tu vas cloner ton repo est un r√©pertoire prot√©g√© en √©criture, il faut donc te donner le droit d&#39;y modifier des fichiers et des dossiers.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> o+w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www</span></span></code></pre></div><p>On peut d√©composer cette commande ainsi :</p><ul><li><code>sudo</code> - on ex√©cute la commande qui suit avec les droits administrateur</li><li><code>chmod</code> - commande qui permet de modifier les droits d&#39;une ressources (fichier ou r√©pertoire)</li><li><code>-R</code> - on indique que la modification s&#39;appliquera aussi aux fichiers et dossiers enfants, par <em>r√©cursivit√©</em></li><li><code>o+w</code> - il s&#39;agit de la modification des droits <ul><li><code>o</code> - on modifie les droits des &quot;autres utilisateurs&quot;, c&#39;est-√†-dire ceux qui ne sont pas propri√©taires de la ressource</li><li><code>+</code> - on indique qu&#39;on ajoute les droits qui suivent</li><li><code>w</code> - droit d&#39;√©criture (üá¨üáß <em>write</em> = üá´üá∑ <em>√©crire</em>)</li></ul></li><li><code>/var/www</code> - on sp√©cifie le chemin de la ressource dont on modifie les droits, ici c&#39;est le r√©pertoire <code>/var/www</code></li></ul><p>Cette commande-ci devrait t&#39;√™tre famili√®re, on ne fait que se placer dans un r√©pertoire pr√©cis :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www</span></span></code></pre></div><p>Enfin, on clone dans <code>/var/www</code> ton repo pour ramener ton code sur ton serveur. Le deuxi√®me argument de <code>git clone</code> te d√©concertera peut-√™tre, mais il sert seulement √† indiquer √† Git le nom du r√©pertoire dans lequel on souhaite cloner le repo. Ici, le r√©pertoire qui sera clon√© sera appel√© <code>app.site</code>, tu peux lui donner n&#39;importe quel nom mais il te faudra alors penser √† mettre le bon chemin dans les parties concern√©es plus tard dans ce tutoriel.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">UR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.site</span></span></code></pre></div></details><blockquote><p>‚ö†Ô∏è Si Git n&#39;a pas acc√®s au repo GitHub, assure-toi d&#39;avoir g√©n√©r√© une cl√© SSH sur la VM Server Kourou et de l&#39;avoir enregistr√©e dans ton compte GitHub : <a href="https://kourou.oclock.io/ressources/fiche-recap/git-et-github/#cr%c3%a9er-une-cl%c3%a9-ssh-pour-github" target="_blank" rel="noreferrer">https://kourou.oclock.io/ressources/fiche-recap/git-et-github/#cr%c3%a9er-une-cl%c3%a9-ssh-pour-github</a></p></blockquote><h2 id="etape-3-preparer-le-projet-pour-la-production" tabindex="-1">√âtape 3 : Pr√©parer le projet pour la production <a class="header-anchor" href="#etape-3-preparer-le-projet-pour-la-production" aria-label="Permalink to &quot;√âtape 3 : Pr√©parer le projet pour la production&quot;">‚Äã</a></h2><h3 id="preparation-de-la-base-de-donnees" tabindex="-1">Pr√©paration de la base de donn√©es <a class="header-anchor" href="#preparation-de-la-base-de-donnees" aria-label="Permalink to &quot;Pr√©paration de la base de donn√©es&quot;">‚Äã</a></h3><p>Pour cr√©er et configurer la base de donn√©es, tu vas utiliser MySQL en ligne de commande :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span></code></pre></div><details><summary>SPOILER: D√©tail de la commande</summary><p>On utilise ici la commande <code>mysql</code> fournie par notre installation du package <code>mariadb-client</code> pour se connecter au serveur de bases de donn√©es. L&#39;option <code>-u</code> permet d&#39;indiquer le nom de l&#39;utilisateur avec lequel on souhaite se connecter.</p><p>Comme notre installation de MariaDB/MySQL est &quot;fra√Æche&quot;, le serveur de bases de donn√©es ne comporte qu&#39;un seul utilisateur qui a tous les droits : <code>root</code>. Cependant, son utilisation est restreinte par d√©faut.</p><p>En effet, <code>root</code> ne peut se connecter que via le terminal et seulement si la commande <code>mysql</code> est utilis√©e avec les droits administrateur (via <code>sudo</code>). <strong>Tu ne pourras donc pas utiliser l&#39;utilisateur <code>root</code> pour te connecter √† ta base de donn√©es avec ton code !!!</strong></p></details><p>Tu devrais maintenant te trouver dans un shell MySQL, c&#39;est un peu comme le terminal de ton SGBDR √† l&#39;int√©rieur de ton terminal.</p><p>Cr√©e d&#39;abord la base de donn√©es <strong>(‚ö†Ô∏è <em>remplace <code>&lt;db&gt;</code> par le nom de ta BDD !!!</em>)</strong> :</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Cr√©e ensuite l&#39;utilisateur qui permettra √† ton code de se connecter √† ta base de donn√©es <strong>(‚ö†Ô∏è <em>remplace <code>&lt;user&gt;</code> par le nom de l&#39;utilisateur et <code>&lt;password&gt;</code> par son mot de passe !!!</em>)</strong> :</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;user&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IDENTIFIED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;password&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Donne les droits √† l&#39;utilisateur sur la base de donn√©es <strong>(‚ö†Ô∏è <em>remplace <code>&lt;db&gt;</code> par le nom de la BDD et <code>&lt;user&gt;</code> par le nom de l&#39;utilisateur !!!</em>)</strong> :</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ALL PRIVILEGES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;user&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FLUSH PRIVILEGES;</span></span></code></pre></div><p>Sors du shell MySQL :</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXIT;</span></span></code></pre></div><h3 id="preparation-du-env-local" tabindex="-1">Pr√©paration du <code>.env.local</code> <a class="header-anchor" href="#preparation-du-env-local" aria-label="Permalink to &quot;Pr√©paration du \`.env.local\`&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.site</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;APP_ENV=prod&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;APP_SECRET=&quot;.bin2hex(random_bytes(16)).&quot;\\n&quot;;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><p>‚ö†Ô∏è <strong><em>Pense √† remplacer <code>&lt;db&gt;</code> par le nom de ta base de donn√©es, <code>&lt;user&gt;</code> par le nom de l&#39;utilisateur que tu as cr√©√© plus haut et <code>&lt;password&gt;</code> par son mot de passe !!!</em></strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;DATABASE_URL=&quot;mysql://&lt;user&gt;:&lt;password&gt;@localhost:3306/&lt;db&gt;?charset=utf8mb4&quot;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><p>Si tu utilises LexikJWT :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;JWT_PASSPHRASE=&quot;.bin2hex(random_bytes(16)).&quot;\\n&quot;;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><details><summary>SPOILER: D√©tail des commandes</summary><p>On se place dans le r√©pertoire du site :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/app.site</span></span></code></pre></div><p>On cr√©e le fichier <code>.env.local</code> :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><p>On y ajoute la variable d&#39;environnement <code>APP_ENV</code> avec la valeur <code>prod</code> dans le fichier <code>.env.local</code>. C&#39;est ce qui va permettre de passer Symfony en mode &quot;production&quot;, d√©sactivant ainsi la barre de d√©bug et activant d&#39;autres features d&#39;optimisation comme la mise en cache des templates Twig pr√©-compil√©s.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;APP_ENV=prod&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><p>On g√©n√®re une nouvelle cha√Æne al√©atoire pour le chiffrement des cookies. Tu pourrais tout aussi bien utiliser la m√™me cha√Æne que dans ton environnement de d√©veloppement mais il est recommand√© de faire en sorte que celle-ci soit propre √† chaque environnement pour maximiser la s√©curit√© du chiffrement.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;APP_SECRET=&quot;.bin2hex(random_bytes(16)).&quot;\\n&quot;;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><p>On ins√®re les informations de connexion √† la base de donn√©es sous la forme d&#39;une URL tel que recommand√© par la documentation de Symfony. Tu peux noter que dans un souci de simplification, la version du SGBDR a √©t√© omise ici (elle est facultative).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;DATABASE_URL=&quot;mysql://&lt;user&gt;:&lt;password&gt;@localhost:3306/&lt;db&gt;?charset=utf8mb4&quot;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div><p>Dans la m√™me veine que le <code>APP_SECRET</code>, tu peux g√©n√©rer une nouvelle passphrase pour les tokens JWT afin de maximiser l&#39;efficacit√© de leur chiffrement √† travers tes diff√©rents environnements.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;JWT_PASSPHRASE=&quot;.bin2hex(random_bytes(16)).&quot;\\n&quot;;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span></code></pre></div></details><h3 id="installation-du-projet" tabindex="-1">Installation du projet <a class="header-anchor" href="#installation-du-projet" aria-label="Permalink to &quot;Installation du projet&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-dev</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctrine:migrations:migrate</span></span></code></pre></div><details><summary>SPOILER: D√©tail des commandes</summary><p>L&#39;option <code>--no-dev</code> de <code>composer install</code> permet de ne pas installer les d√©pendances qui ne servent qu&#39;au d√©veloppement et au test de ton application Symfony (fixtures, framework de tests unitaires, etc.).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-dev</span></span></code></pre></div><p>Apr√®s l&#39;installation, tu peux commencer √† utiliser la CLI de ton projet Symfony. Commen√ßons par ex√©cuter les migrations de ton projet pour construire la structure de la base de donn√©es, car tu l&#39;as en effet cr√©√©e mais elle est toujours vide √† ce stade.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctrine:migrations:migrate</span></span></code></pre></div></details><p>Si tu utilises üîë LexikJWT :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lexik:jwt:generate-keypair</span></span></code></pre></div><h2 id="etape-4-configurer-le-virtual-host" tabindex="-1">√âtape 4 : Configurer le <em>virtual host</em> <a class="header-anchor" href="#etape-4-configurer-le-virtual-host" aria-label="Permalink to &quot;√âtape 4 : Configurer le _virtual host_&quot;">‚Äã</a></h2><h3 id="pointage-du-virtual-host-par-defaut-sur-le-repertoire-du-projet" tabindex="-1">Pointage du virtual host par d√©faut sur le r√©pertoire du projet <a class="header-anchor" href="#pointage-du-virtual-host-par-defaut-sur-le-repertoire-du-projet" aria-label="Permalink to &quot;Pointage du virtual host par d√©faut sur le r√©pertoire du projet&quot;">‚Äã</a></h3><blockquote><p>‚ö†Ô∏è Si ton projet se situe dans un sous-r√©pertoire de ton repo, il te faut remplacer dans la commande suivante <code>app.site/public</code> par <code>app.site/&lt;ton sous-r√©pertoire&gt;/public</code>. Par exemple, si tu as install√© Symfony dans un r√©pertoire <code>MonProjet</code> dans ton repo, tu dois remplacer ici <code>app.site/public</code> par <code>app.site/MonProjet/public</code> !</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s#\\/var\\/www\\/html#/var/www/app.site/public\\n\\n\\t&lt;Directory /var/www/app.site/public&gt;\\n\\t\\tAllowOverride all\\n\\t&lt;/Directory&gt;#g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apache2/sites-available/000-default.conf</span></span></code></pre></div><details><summary>SPOILER: D√©tail de la commande</summary><p>J&#39;avoue, cette commande est carr√©ment barbare üßå et, entre nous, franchement pas jolie ü´†</p><p>Il faut savoir que le serveur Apache peut g√©rer plusieurs sites √† la fois sur une m√™me machine. Pour ce faire, il utilise ce qu&#39;on appelle des &quot;virtual hosts&quot;, c&#39;est-√†-dire qu&#39;il configure la mani√®re dont il doit servir les fichiers des diff√©rents r√©pertoires des sites concern√©s de mani√®re atomique et isol√©e.</p><p>√Ä l&#39;installation, Apache n&#39;a qu&#39;un virtual host configur√©, qui est son virtual host par d√©faut. Le fichier de configuration de ce virtual host est, pour la version Debian/Ubuntu d&#39;Apache, <code>/etc/apache2/sites-available/000-default.conf</code>. Si tu regardes le contenu de ce fichier avant d&#39;ex√©cuter la commande donn√©e, tu remarqueras la ligne suivante :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DocumentRoot /var/www/html</span></span></code></pre></div><p>Cette ligne indique que pour ce virtual host, Apache doit servir les fichiers qui se trouvent dans le r√©pertoire <code>/var/www/html</code>. Dans ton cas, nous voulons servir les fichiers depuis le r√©pertoire <code>public/</code> car c&#39;est l√† que se trouve le fichier <code>index.php</code> qui est le front controller de Symfony ainsi que tous les fichiers statiques (CSS, JS, images‚Ä¶). La commande modifie donc cette ligne en :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DocumentRoot /var/www/app.site/public</span></span></code></pre></div><p>Mais ce n&#39;est pas tout ! Tu te souviens du fichier <code>.htaccess</code> ?</p><p>Il s&#39;agit d&#39;un fichier de configuration Apache qui permet de surcharger certaines parties de la configuration du serveur ou du virtual host. Par d√©faut, ce fichier n&#39;est pas pris en compte par Apache. La commande ajoute donc sa prise en charge en ajoutant aussi dans la configuration du virtual host ces lignes :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;Directory /var/www/app.site/public&gt;</span></span>
<span class="line"><span>    AllowOverride all</span></span>
<span class="line"><span>&lt;/Directory&gt;</span></span></code></pre></div><p>Elles sp√©cifient que dans le r√©pertoire <code>/var/www/app.site/public</code> et ses sous-r√©pertoires, Apache doit tenir compte de toutes les directives de configuration qui se trouvent dans des fichiers <code>.htaccess</code>. Sans √ßa, notre <code>.htaccess</code> ne servirait √† rien.</p><blockquote><p>‚ùì<strong>Pourquoi utiliser un <code>.htaccess</code> au lieu de tout mettre dans la configuration du virtual host ?</strong></p><p>Le souci avec la configuration du virtual host, c&#39;est que pour des raisons de s√©curit√©, les h√©bergeurs limitent souvent sa modification √† quelques directives (le <code>DocumentRoot</code> la plupart du temps, et √©ventuellement quelques autres). En revanche, la plupart des directives de configuration courantes telles que la r√©√©criture d&#39;URL sont g√©n√©ralement autoris√©es et prises en compte via les fichiers <code>.htaccess</code>. En embarquant la configuration du traitement des URL, propre √† l&#39;application ind√©pendamment du serveur sur lequel elle est d√©ploy√©e, plut√¥t que dans la configuration du virtual host, on s&#39;assure de sa portabilit√©.</p></blockquote></details><h3 id="activation-du-module-de-reecriture-d-url" tabindex="-1">Activation du module de r√©√©criture d&#39;URL <a class="header-anchor" href="#activation-du-module-de-reecriture-d-url" aria-label="Permalink to &quot;Activation du module de r√©√©criture d&#39;URL&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rewrite</span></span></code></pre></div><details><summary>SPOILER: D√©tail de la commande</summary><p>Ici, on active le module de r√©√©criture d&#39;URL d&#39;Apache. Celui-ci n&#39;est g√©n√©ralement pas activ√© par d√©faut sur une installation vierge, il faut donc l&#39;activer pour que nos r√®gles de r√©√©criture d&#39;URL soient prises en compte.</p><p>Si tu as d√©j√† activ√© ce module, cette commande ne fera rien et t&#39;indiquera juste que le module est d√©j√† activ√©. üôÇ</p></details><h3 id="redemarrer-le-serveur-apache" tabindex="-1">Red√©marrer le serveur Apache <a class="header-anchor" href="#redemarrer-le-serveur-apache" aria-label="Permalink to &quot;Red√©marrer le serveur Apache&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><details><summary>SPOILER: D√©tail de la commande</summary><p>Le serveur Apache ne charge ses fichiers de configuration qu&#39;une seule fois, au d√©marrage. Comme tu viens de modifier un virtual host et d&#39;activer un de ses modules, tu dois red√©marrer Apache pour qu&#39;il recharger sa configuration. Si tu n&#39;as pas introduit d&#39;erreur dans la configuration du virtual host, cette commande ne devrait produire aucun message.</p></details><h2 id="etape-5-contempler-son-oelig-uvre-ü§©" tabindex="-1">√âtape 5 : Contempler son ≈ìuvre ü§© <a class="header-anchor" href="#etape-5-contempler-son-oelig-uvre-ü§©" aria-label="Permalink to &quot;√âtape 5 : Contempler son &amp;oelig;uvre ü§©&quot;">‚Äã</a></h2><p>Tu dois normalement pouvoir te rendre sur <code>http://&lt;pseudo&gt;-server.eddi.cloud</code> et voir ta SPA en production.</p><p>Alors, heureux¬∑se ?</p><h2 id="etape-6-mettre-a-jour-l-application-en-production" tabindex="-1">√âtape 6 : Mettre √† jour l&#39;application en production <a class="header-anchor" href="#etape-6-mettre-a-jour-l-application-en-production" aria-label="Permalink to &quot;√âtape 6 : Mettre √† jour l&#39;application en production&quot;">‚Äã</a></h2><p>Pour mettre √† jour la version de ton application en production, connecte-toi √† ta VM Server Cloud, puis :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/app.site</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-dev</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctrine:migrations:migrate</span></span></code></pre></div><blockquote><p>‚ö†Ô∏è M√™me si aucune d√©pendance n&#39;a boug√© dans le projet (pas de nouveau bundle, pas de mise √† jour) il est important de lancer un <code>composer install</code> √† chaque d√©ploiement car Symfony en profite pour ex√©cuter des t√¢ches bien utiles comme la vidange du cache de Twig qui permettent de finaliser la mise √† jour.</p></blockquote><h2 id="etape-7-bonus-installer-adminer-pour-administrer-la-bdd" tabindex="-1">√âtape 7 (bonus) : Installer Adminer pour administrer la BDD <a class="header-anchor" href="#etape-7-bonus-installer-adminer-pour-administrer-la-bdd" aria-label="Permalink to &quot;√âtape 7 (bonus) : Installer Adminer pour administrer la BDD&quot;">‚Äã</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adminer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2enconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adminer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2</span></span></code></pre></div><p>Adminer est accessible sur <code>http://&lt;pseudo&gt;-server.eddi.cloud/adminer</code> et tu peux te connecter √† ta base de donn√©es avec l&#39;utilisateur cr√©√© plus haut dans ce tutoriel et son mot de passe ! üéâ</p><blockquote><p>‚ö†Ô∏è Adminer &quot;r√©serve&quot; l&#39;URL <code>/adminer</code> sur ton serveur, tu dois donc t&#39;assurer de ne pas d√©finir de route commen√ßant par <code>/adminer</code> dans ton projet Symfony !</p></blockquote><h2 id="etape-8-bonus-pre-remplir-la-bdd-avec-les-fixtures" tabindex="-1">√âtape 8 (bonus) : Pr√©-remplir la BDD avec les fixtures <a class="header-anchor" href="#etape-8-bonus-pre-remplir-la-bdd-avec-les-fixtures" aria-label="Permalink to &quot;√âtape 8 (bonus) : Pr√©-remplir la BDD avec les fixtures&quot;">‚Äã</a></h2><blockquote><p>‚ÑπÔ∏è Les fixtures sont en principe d√©di√©es au d√©veloppement et au test des applications. En production, on utilise directement de vraies donn√©es. En r√®gle g√©n√©rale, si des donn√©es doivent pr√©-exister dans la base de donn√©es au premier d√©ploiement d&#39;une application, on pr√©f√®re faire un export d&#39;une base de donn√©es &quot;propre&quot; construite en vue de la mise en production, puis l&#39;importer sur le serveur. Mais dans le cadre d&#39;un projet d&#39;apoth√©ose, on comprend parfaitement que les fixtures puissent remplir aussi ce r√¥le.</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/app.site</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s#APP_ENV=prod#APP_ENV=dev#&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctrine:migrations:migrate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin:console</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctrine:fixtures:load</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s#APP_ENV=dev#APP_ENV=prod#&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-dev</span></span></code></pre></div>`,90),l=[n];function p(r,o,d,h,c,u){return i(),s("div",null,l)}const m=e(t,[["render",p]]);export{g as __pageData,m as default};

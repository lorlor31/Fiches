import{_ as n,c as s,o as a,a2 as e}from"./chunks/framework.CEgrwLex.js";const v=JSON.parse('{"title":"RUNNER GITLAB","description":"","frontmatter":{},"headers":[],"relativePath":"cicd/CI-CD-Runner-Gitlab.md","filePath":"cicd/CI-CD-Runner-Gitlab.md"}'),p={name:"cicd/CI-CD-Runner-Gitlab.md"},l=e(`<h1 id="runner-gitlab" tabindex="-1">RUNNER GITLAB <a class="header-anchor" href="#runner-gitlab" aria-label="Permalink to &quot;RUNNER GITLAB&quot;">‚Äã</a></h1><h2 id="definitions-runner-pipeline-stages-jobs" tabindex="-1">D√©finitions : Runner / Pipeline / Stages / Jobs <a class="header-anchor" href="#definitions-runner-pipeline-stages-jobs" aria-label="Permalink to &quot;D√©finitions : Runner / Pipeline / Stages / Jobs&quot;">‚Äã</a></h2><pre><code>- Un **runner** est une sorte de programme/**service** qui va permettre d&#39;ex√©cuter des **jobs**. 
- Il peut √™tre **li√© √† un projet sp√©cifique** ou **partag√©**.
- Quand il est de projet, il est enregistr√© sur l&#39;ordi et le programme gitlab-runner va lancer une instance de ce runner pour ex√©cuter les commandes qu&#39;il contient.
- Ces commandes sont dans un fichier .gitlab-ci.yml qui servira √† cr√©er les **pipelines**, c&#39;est l&#39;encha√Ænement des **stages**
- Les **stages** contiennent des **jobs** qui s&#39;ex√©cutent les uns apr√®s les autres.
</code></pre><h2 id="etapes-principales-de-la-mise-en-oeuvre-du-runner" tabindex="-1">Etapes principales de la mise en oeuvre du runner <a class="header-anchor" href="#etapes-principales-de-la-mise-en-oeuvre-du-runner" aria-label="Permalink to &quot;Etapes principales de la mise en oeuvre du runner&quot;">‚Äã</a></h2><ol><li>Cr√©er un repo sur Gitlab</li><li>Cr√©er le runner : <ul><li>Aller dans <strong>Settings-&gt;CI/CD-&gt;Runners</strong></li><li>Cliquer sur <strong>New Project Runner</strong> et v√©rifier la conf ( cocher &quot;Run untagged jobs&quot;)</li><li>Cliquer sur <strong>Create runner</strong></li></ul></li><li>Enregistrer le runner : <ul><li>Mettre Linux et copier le code.</li><li>Ouvrir un terminal et coller la commande copi√©e pr√©c√©d√©e de <strong>sudo</strong></li><li>Pour <code>Enter the GitLab instance URL</code> faire Entr√©e</li><li>Taper le nom qu&#39;on veut pour le runner.</li><li>Taper <code>shell</code> pour l&#39;ex√©cuteur.</li><li>La config du runner sera rajout√©e dans le fichier <code>/etc/gitlab-runner/config.toml</code></li></ul></li><li>Editer le runner : <ul><li>Aller dans Build=&gt; Pipeline Editor</li><li>Editer le fichier .gitlab-ci.yml</li></ul></li><li>A faire avant, apr√®s, selon les cas :</li></ol><ul><li>D√©clarer des variables d&#39;environnement, qu&#39;on peut m√™me faire varier selon les environnements (dev,prod etc...). Exp : DATABASE_URL=&quot;mysql://\${DATABASE_USER}üòí{DATABASE_PWD}@127.0.0.1:3306/\${DATABASE_NAME}&quot;. Attention √† mettre les variables √† remplacer entour√©es par \${}, sans guillemets.</li><li>Attention √† d√©cocher que la variable ne fonctionne que sur des branches prot√©g√©es si ce n&#39;est pas n√©cessaire.</li><li>Pour d√©clarer des environnements, Operate-&gt;Environments.</li><li>Bien v√©rifier que le runner est lanc√© dans la liste des runners</li><li>D√©cocher la possibilit√© d&#39;utiliser des runners partag√©s.</li><li></li></ul><h2 id="explications-sur-le-deroulement" tabindex="-1">Explications sur le d√©roulement <a class="header-anchor" href="#explications-sur-le-deroulement" aria-label="Permalink to &quot;Explications sur le d√©roulement&quot;">‚Äã</a></h2><ul><li><strong>GitLab d√©tecte le push</strong> et v√©rifie s&#39;il existe un fichier .gitlab-ci.yml dans le d√©p√¥t. Ce fichier d√©finit la configuration du pipeline CI/CD, y compris les √©tapes (stages) et les jobs √† ex√©cuter.</li><li>Il <strong>cr√©e un pipeline</strong> en fonction des instructions d√©finies dans le fichier .gitlab-ci.yml. Chaque job est ajout√© √† la file d&#39;attente du runner pour √™tre ex√©cut√©.</li><li>Un <strong>runner appropri√©</strong> est s√©lectionn√© pour ex√©cuter les jobs du pipeline. Cela peut √™tre un runner partag√© (Shared Runner) ou un runner sp√©cifique d√©di√© au projet.</li><li>Le runner r√©cup√®re les jobs de la file d&#39;attente et les <strong>ex√©cute dans l&#39;environnement sp√©cifi√©</strong>. Chaque job peut impliquer des t√¢ches telles que la compilation de code, l&#39;ex√©cution de tests, la construction d&#39;artefacts, ou le d√©ploiement d&#39;applications.</li><li>Pendant l&#39;ex√©cution, le runner g√©n√®re des <strong>logs et des rapports</strong> qui sont renvoy√©s √† GitLab. Vous pouvez voir l&#39;√©tat d&#39;avancement et les d√©tails de chaque job dans l&#39;interface GitLab.</li><li>Chaque job retourne un <strong>√©tat de sortie</strong> (success ou failure) √† GitLab une fois termin√©. GitLab utilise ces r√©sultats pour d√©cider de la progression du pipeline et de l&#39;√©tat global du build.</li><li>Une fois que tous les jobs sont termin√©s, le runner <strong>nettoie</strong> les ressources utilis√©es (par exemple, les conteneurs Docker) et archive √©ventuellement les artefacts g√©n√©r√©s (comme les fichiers de build).</li></ul><h2 id="exemples-de-scripts-pour-s-inspirer" tabindex="-1">Exemples de scripts pour s&#39;inspirer <a class="header-anchor" href="#exemples-de-scripts-pour-s-inspirer" aria-label="Permalink to &quot;Exemples de scripts pour s&#39;inspirer&quot;">‚Äã</a></h2><h3 id="script-avec-deux-environnements-les-variables-ont-ete-declarees-au-prealable-pour-ces-deux-environnements" tabindex="-1">Script avec deux environnements, les variables ont √©t√© d√©clar√©es au pr√©alable pour ces deux environnements <a class="header-anchor" href="#script-avec-deux-environnements-les-variables-ont-ete-declarees-au-prealable-pour-ces-deux-environnements" aria-label="Permalink to &quot;Script avec deux environnements, les variables ont √©t√© d√©clar√©es au pr√©alable pour ces deux environnements&quot;">‚Äã</a></h3><p>Attention en env de prod, il faudra d√©clencher manuellement le d√©ploiement.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Initialisation de commandes utiles au traitement (communes aux diff√©rents environnements)</span></span>
<span class="line"><span>before_script:</span></span>
<span class="line"><span>  # instructions requises pour l&#39;authentification par clef</span></span>
<span class="line"><span> - eval $(ssh-agent)</span></span>
<span class="line"><span>  - echo &quot;$SSH_PRIVATE_KEY&quot; | ssh-add -</span></span>
<span class="line"><span>  - pwd</span></span>
<span class="line"><span>  - ls -alrt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># S&#39;affichera uniquement lors d&#39;un d√©ploiement de la branche &quot;develop&quot;</span></span>
<span class="line"><span>livraison_sur_environnement_de_development:</span></span>
<span class="line"><span>  rules:</span></span>
<span class="line"><span>    - if: &#39;$CI_COMMIT_BRANCH == &quot;develop&quot;&#39;</span></span>
<span class="line"><span>  environment: development</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  script:</span></span>
<span class="line"><span>      # G√©n√©ration dynamique du fichier de configuration &quot;.env&quot; √† partir du template &quot;.env.example&quot;</span></span>
<span class="line"><span>      # (les patterns sont remplac√©s par les variables d√©clar√©es dans Gitlab </span></span>
<span class="line"><span>      # qui deviennent des variables d&#39;environnement dans le contexte du Runner)</span></span>
<span class="line"><span>      - envsubst &lt; &quot;.env.example&quot; &gt; fichier_temporaire &amp;&amp; mv fichier_temporaire &quot;.env&quot;</span></span>
<span class="line"><span>      - ls -alrt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Suppression des fichiers et dossiers √† exclure du transfert</span></span>
<span class="line"><span>      - rm .env.example</span></span>
<span class="line"><span>      - rm -rf .git/</span></span>
<span class="line"><span>      - rm .gitlab-ci.yml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Affichage du chemin courant pour information, </span></span>
<span class="line"><span>      # on remonte d&#39;un dossier sup√©rieur pour jouer la commande d&#39;archive</span></span>
<span class="line"><span>      - pwd</span></span>
<span class="line"><span>      - cd ..</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Suppression du dossier &quot;development&quot; d&#39;un d√©ploiement pr√©c√©dent</span></span>
<span class="line"><span>      # Cr√©ation de l&#39;archive et affichage du contenu du dossier courant pour visualiser l&#39;existence de l&#39;archive</span></span>
<span class="line"><span>      - rm -rf development</span></span>
<span class="line"><span>      - mv ./ci_lot4 ./development</span></span>
<span class="line"><span>      - tar -czf ci_lot4_development.tar.gz ./development</span></span>
<span class="line"><span>      - ls -alrt      </span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Transfert de l&#39;archive et message d&#39;information affich√© dans la console du pipeline</span></span>
<span class="line"><span>       - scp -P 5022 -p ci_lot4_development.tar.gz nomUtilisateur@nomHote.com:/home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>      - echo &quot;Copie de l&#39;archive termin√©e&quot;</span></span>
<span class="line"><span>      # Connexion en ssh sur le serveur distant pour d√©compresser l&#39;archive puis la </span></span>
<span class="line"><span>      # supprimer (car devenue inutile apr√®s usage)</span></span>
<span class="line"><span>      - ssh -p &#39;5022&#39; il manque une ‚Äò ici  nomUtilisateur@nomHote.com&#39; /bin/bash&lt;&lt;-EOT</span></span>
<span class="line"><span>      - cd /home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>      - tar -xzf ci_lot4_development.tar.gz</span></span>
<span class="line"><span>      - rm ci_lot4_development.tar.gz</span></span>
<span class="line"><span>      - EOT </span></span>
<span class="line"><span></span></span>
<span class="line"><span># S&#39;affiche uniquement lors d&#39;un d√©ploiement de la branche &quot;main&quot;</span></span>
<span class="line"><span>livraison_sur_environnement_de_production:</span></span>
<span class="line"><span>  rules:</span></span>
<span class="line"><span>    # si la branche est main</span></span>
<span class="line"><span>    - if: &#39;$CI_COMMIT_BRANCH == &quot;main&quot;&#39;</span></span>
<span class="line"><span>      when: manual</span></span>
<span class="line"><span>  environment: production</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  script:</span></span>
<span class="line"><span>      # G√©n√©ration dynamique du fichier de configuration &quot;.env&quot; √† partir du template &quot;.env.example&quot;</span></span>
<span class="line"><span>      # (les patterns sont remplac√©s par les variables d√©clar√©es dans Gitlab </span></span>
<span class="line"><span>      # qui deviennent des variables d&#39;environnement dans le contexte du Runner)</span></span>
<span class="line"><span>      - envsubst &lt; &quot;.env.example&quot; &gt; fichier_temporaire &amp;&amp; mv fichier_temporaire &quot;.env&quot;</span></span>
<span class="line"><span>      - ls -alrt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Suppression des fichiers et dossiers √† exclure du transfert</span></span>
<span class="line"><span> - rm .env.example</span></span>
<span class="line"><span>      - rm -rf .git/</span></span>
<span class="line"><span>      - rm .gitlab-ci.yml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Affichage du chemin courant pour information, on remonte d&#39;un dossier </span></span>
<span class="line"><span>      # sup√©rieur pour jouer la commande d&#39;archive</span></span>
<span class="line"><span>      - pwd</span></span>
<span class="line"><span>      - cd ..</span></span>
<span class="line"><span>      </span></span>
<span class="line"><span>      # Suppression du dossier &quot;production&quot; d&#39;un d√©ploiement pr√©c√©dent</span></span>
<span class="line"><span>      # Cr√©ation de l&#39;archive et affichage du contenu du dossier courant pour visualiser l&#39;existence de l&#39;archive</span></span>
<span class="line"><span>      - rm -rf production      </span></span>
<span class="line"><span>      - mv ./ci_lot4 ./production</span></span>
<span class="line"><span>      - tar -czf ci_lot4_production.tar.gz ./production</span></span>
<span class="line"><span>      - ls</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # Transfert de l&#39;archive et message d&#39;information affich√© dans la console du pipeline</span></span>
<span class="line"><span>       - scp -P 5022 -p ci_lot4_production.tar.gz nomUtilisateur@nomHote.com:/home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>      - echo &quot;Copie de l&#39;archive termin√©e&quot;</span></span>
<span class="line"><span>      # Connexion en ssh sur le serveur distant pour d√©compresser</span></span>
<span class="line"><span>      #  l&#39;archive puis la supprimer (car devenue inutile apr√®s usage)</span></span>
<span class="line"><span>      - ssh -p &#39;5022&#39; ‚ÄònomUtilisateur@nomHote.com&#39; /bin/bash&lt;&lt;-EOT</span></span>
<span class="line"><span>      - cd /home/chemin_absolu_jusqu_au_dossier_parent_du_projet/        </span></span>
<span class="line"><span>      - tar -xzf ci_lot4_production.tar.gz</span></span>
<span class="line"><span>      - rm ci_lot4_production.tar.gz</span></span>
<span class="line"><span>      - EOT</span></span></code></pre></div><h3 id="script-pour-un-projet-realise-avec-symfony" tabindex="-1">Script pour un projet r√©alis√© avec Symfony <a class="header-anchor" href="#script-pour-un-projet-realise-avec-symfony" aria-label="Permalink to &quot;Script pour un projet r√©alis√© avec Symfony&quot;">‚Äã</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>j_execute_les_instructions_de_livraison:</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span> cache:</span></span>
<span class="line"><span>   paths:</span></span>
<span class="line"><span>     - vendor/</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span> script:</span></span>
<span class="line"><span>     # G√©n√©ration dynamique du fichier de configuration &quot;.env.local&quot; √† partir du template &quot;.env&quot;</span></span>
<span class="line"><span>     # (les patterns sont remplac√©s par les variables d√©clar√©es dans Gitlab</span></span>
<span class="line"><span>     # qui deviennent des variables d&#39;environnement dans le contexte du Runner)</span></span>
<span class="line"><span>     - envsubst &lt; &quot;.env&quot; &gt; fichier_temporaire &amp;&amp; mv fichier_temporaire &quot;.env.local&quot;</span></span>
<span class="line"><span>     - ls -alrt</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>     # Installation de Composer dans le r√©pertoire courant</span></span>
<span class="line"><span>     - curl -sS https://getcomposer.org/installer | php -- --install-dir=./ --filename=composer</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Installation de symfony et de ses d√©pendances dans le r√©pertoire courant</span></span>
<span class="line"><span>     -  php ./composer install --working-dir=./</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Commandes requises pour l&#39;authentification par clef</span></span>
<span class="line"><span>     - eval $(ssh-agent)</span></span>
<span class="line"><span>     - echo &quot;$SSH_PRIVATE_KEY&quot; | ssh-add -</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Suppression du dossier .git et fichier √† exclure du transfert</span></span>
<span class="line"><span>     - rm -rf .git/</span></span>
<span class="line"><span>     - rm .gitlab-ci.yml</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Affichage du chemin courant pour information, on remonte d&#39;un dossier sup√©rieur pour jouer la commande d&#39;archive</span></span>
<span class="line"><span>     - pwd</span></span>
<span class="line"><span>     - cd ..</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Cr√©ation de l&#39;archive et affichage du contenu du dossier courant pour visualiser l&#39;existence de l&#39;archive</span></span>
<span class="line"><span>     # Le nom du dossier courant correspond au slug du projet</span></span>
<span class="line"><span>     - tar -czf ci_lot5.tar.gz ./ci_lot5</span></span>
<span class="line"><span>     - ls</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Transfert de l&#39;archive et message d&#39;information affich√© dans la console du pipeline</span></span>
<span class="line"><span>     - scp -P &#39;numPort&#39; -p ci_lot5.tar.gz nomUtilisateur@nomHote.com:/home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>     - echo &quot;Copie de l&#39;archive termin√©e&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Connexion en ssh sur le serveur distant pour d√©compresser l&#39;archive puis la supprimer (car devenue inutile apr√®s usage)</span></span>
<span class="line"><span>     - ssh -p &#39;numPort&#39; &#39;nomUtilisateur@nomHote.com&#39; /bin/bash&lt;&lt;-EOT</span></span>
<span class="line"><span>     - cd /home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>     - tar -xzf ci_lot5.tar.gz</span></span>
<span class="line"><span>     - rm ci_lot5.tar.gz</span></span>
<span class="line"><span>     - EOT</span></span></code></pre></div><h3 id="script-pour-un-projet-realise-avec-npm" tabindex="-1">Script pour un projet r√©alis√© avec NPM <a class="header-anchor" href="#script-pour-un-projet-realise-avec-npm" aria-label="Permalink to &quot;Script pour un projet r√©alis√© avec NPM&quot;">‚Äã</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>j_execute_les_instructions_de_livraison:</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span> script:</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Ex√©cution de npm pour installer les d√©pendances du projet</span></span>
<span class="line"><span>     - npm install</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Commandes requises pour l&#39;authentification par clef</span></span>
<span class="line"><span>     - eval $(ssh-agent)</span></span>
<span class="line"><span>     - echo &quot;$SSH_PRIVATE_KEY&quot; | ssh-add -</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Suppression du dossier .git et fichier √† exclure du transfert</span></span>
<span class="line"><span>     - rm -rf .git/</span></span>
<span class="line"><span>     - rm .gitlab-ci.yml</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Affichage du chemin courant pour information, on remonte d&#39;un dossier sup√©rieur pour jouer la commande d&#39;archive</span></span>
<span class="line"><span>     - pwd</span></span>
<span class="line"><span>     - cd ..</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Cr√©ation de l&#39;archive et affichage du contenu du dossier courant pour visualiser l&#39;existence de l&#39;archive</span></span>
<span class="line"><span>     # Le nom du dossier courant correspond au slug du projet</span></span>
<span class="line"><span>     - tar -czf ci_lot6.tar.gz ./ci_lot6</span></span>
<span class="line"><span>     - ls</span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Transfert de l&#39;archive et message d&#39;information affich√© dans la console du pipeline</span></span>
<span class="line"><span>     - scp -P &#39;numPort&#39; -p ci_lot6.tar.gz nomUtilisateur@nomHote.com:/home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>     - echo &quot;Copie de l&#39;archive termin√©e&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>     # Connexion en ssh sur le serveur distant pour d√©compresser l&#39;archive puis la supprimer (car devenue inutile apr√®s usage)</span></span>
<span class="line"><span>     - ssh -p &#39;numPort&#39; &#39;nomUtilisateur@nomHote.com&#39; /bin/bash&lt;&lt;-EOT</span></span>
<span class="line"><span>     - cd /home/chemin_absolu_jusqu_au_dossier_parent_du_projet/</span></span>
<span class="line"><span>     - tar -xzf ci_lot6.tar.gz</span></span>
<span class="line"><span>     - rm ci_lot6.tar.gz</span></span>
<span class="line"><span>     - EOT</span></span></code></pre></div><h3 id="script-pour-forcer-l-usage-de-versions-de-npm-et-php" tabindex="-1">Script pour forcer l&#39;usage de versions de npm et PHP <a class="header-anchor" href="#script-pour-forcer-l-usage-de-versions-de-npm-et-php" aria-label="Permalink to &quot;Script pour forcer l&#39;usage de versions de npm et PHP&quot;">‚Äã</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>J_affiche les versions de npm, de node.js et de php utilis√©es par votre runner:</span></span>
<span class="line"><span> </span></span>
<span class="line"><span> # D√©claration d‚Äôune variable d‚Äôenvironnement pour personnaliser les commandes</span></span>
<span class="line"><span> variables:</span></span>
<span class="line"><span>   PATH: &quot;$HOME/bin:$PATH&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span> script:</span></span>
<span class="line"><span>   # Installer nvm</span></span>
<span class="line"><span>   - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span></span>
<span class="line"><span>   # Permettre au bash d&#39;ex√©cuter nvm sans avoir √† relancer le shell</span></span>
<span class="line"><span>   - export NVM_DIR=&quot;$HOME/.nvm&quot;</span></span>
<span class="line"><span>   - |</span></span>
<span class="line"><span>     if [ -s &quot;$NVM_DIR/nvm.sh&quot; ]; then</span></span>
<span class="line"><span>       . &quot;$NVM_DIR/nvm.sh&quot;</span></span>
<span class="line"><span>     fi</span></span>
<span class="line"><span>   # Aller dans le r√©pertoire qui va accueillir le build de votre d√©p√¥t, par exemple /home/gitlab-runner , remplacer si vous n‚Äôavez pas install√© gitlab-runner le m√™me dossier</span></span>
<span class="line"><span>   - cd /home/gitlab-runner</span></span>
<span class="line"><span>   # Forcer node.js √† utiliser la version 14.15.1</span></span>
<span class="line"><span>   - nvm install 14.15.1</span></span>
<span class="line"><span>   # Affichage des versions de node et de npm utilis√©es</span></span>
<span class="line"><span>   - echo -e &quot;\\033[1;33mVotre runner utilise la version $(node -v) de node et la version $(npm -v) de npm. \\033[0m&quot;</span></span>
<span class="line"><span>   # Forcer php √† utiliser la version 8.1</span></span>
<span class="line"><span>   # Cr√©ation d&#39;un lien symbolique qui pointe vers le binaire de la version de PHP d√©sir√©e dans le dossier personnel de l‚Äôutilisateur</span></span>
<span class="line"><span>   - mkdir -p $HOME/bin</span></span>
<span class="line"><span>   - ln -sfn /usr/bin/php8.1 $HOME/bin/php</span></span>
<span class="line"><span>   - export PATH=$HOME/bin:$PATH</span></span>
<span class="line"><span>   # Affichage de la version de php utilis√©e</span></span>
<span class="line"><span>   - echo -e &quot;\\033[1;33m Votre runner utilise la version $(php -v) . \\033[0m&quot;</span></span></code></pre></div>`,18),i=[l];function r(t,o,c,u,d,m){return a(),s("div",null,i)}const f=n(p,[["render",r]]);export{v as __pageData,f as default};
